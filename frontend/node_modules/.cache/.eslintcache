[{"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/index.js":"1","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/App.js":"2","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/reportWebVitals.js":"3","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Login.js":"4","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Register.js":"5","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Profile/Profile.js":"6","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Sidebar/Sidebar.js":"7","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/notifications/Notifications.js":"8","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/NewCategory.js":"9","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/Newarticle.js":"10","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Dashboard/Dashboard.js":"11","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/ViewAds.js":"12","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/Newad.js":"13","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/Editarticle.js":"14","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/Editad.js":"15","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/Potraznja.js":"16","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Users/Users.js":"17","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Articles/ViewArticles.js":"18","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Users/UserAds.js":"19","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Users/ArticleAds.js":"20","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/NewAd.syled.css.js":"21","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Dashboard/CardLineChart.js":"22","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/actions/articleAction.js":"23","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/index.js":"24","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/userReducer.js":"25","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/articleReducer.js":"26","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/article/ArticleDropdown.js":"27","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/dropdown/Dropdown.js":"28","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/actions/userAction.js":"29","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/TotalArticlesTable.js":"30","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/UserTable.js":"31","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/imageupload/ImageUpload.js":"32","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/CardTable.js":"33","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/ArticleTable.js":"34","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/index.js":"35","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/Ponuda.js":"36"},{"size":3100,"mtime":1650439179009,"results":"37","hashOfConfig":"38"},{"size":679,"mtime":1650438387252,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1650386579312,"results":"40","hashOfConfig":"38"},{"size":3585,"mtime":1650438387249,"results":"41","hashOfConfig":"38"},{"size":5195,"mtime":1650438387249,"results":"42","hashOfConfig":"38"},{"size":7266,"mtime":1650386579290,"results":"43","hashOfConfig":"38"},{"size":10416,"mtime":1650438387249,"results":"44","hashOfConfig":"38"},{"size":1354,"mtime":1650386579296,"results":"45","hashOfConfig":"38"},{"size":4944,"mtime":1650386579305,"results":"46","hashOfConfig":"38"},{"size":5594,"mtime":1650386579306,"results":"47","hashOfConfig":"38"},{"size":1048,"mtime":1650386579301,"results":"48","hashOfConfig":"38"},{"size":3852,"mtime":1650386579299,"results":"49","hashOfConfig":"38"},{"size":14949,"mtime":1650438387245,"results":"50","hashOfConfig":"38"},{"size":6716,"mtime":1650438379255,"results":"51","hashOfConfig":"38"},{"size":16819,"mtime":1650438387247,"results":"52","hashOfConfig":"38"},{"size":4675,"mtime":1650438379254,"results":"53","hashOfConfig":"38"},{"size":2714,"mtime":1650438379255,"results":"54","hashOfConfig":"38"},{"size":2093,"mtime":1650386579300,"results":"55","hashOfConfig":"38"},{"size":1904,"mtime":1650438379255,"results":"56","hashOfConfig":"38"},{"size":2078,"mtime":1650438379255,"results":"57","hashOfConfig":"38"},{"size":2329,"mtime":1650439593556,"results":"58","hashOfConfig":"38"},{"size":3825,"mtime":1650386579301,"results":"59","hashOfConfig":"38"},{"size":6479,"mtime":1650438548908,"results":"60","hashOfConfig":"38"},{"size":463,"mtime":1650386579308,"results":"61","hashOfConfig":"38"},{"size":1331,"mtime":1650386579310,"results":"62","hashOfConfig":"38"},{"size":1492,"mtime":1650439685249,"results":"63","hashOfConfig":"38"},{"size":1561,"mtime":1650438387248,"results":"64","hashOfConfig":"38"},{"size":960,"mtime":1650386579294,"results":"65","hashOfConfig":"38"},{"size":3928,"mtime":1650439763017,"results":"66","hashOfConfig":"38"},{"size":5609,"mtime":1650438379253,"results":"67","hashOfConfig":"38"},{"size":3843,"mtime":1650438379253,"results":"68","hashOfConfig":"38"},{"size":621,"mtime":1650386579295,"results":"69","hashOfConfig":"38"},{"size":8700,"mtime":1650438387248,"results":"70","hashOfConfig":"38"},{"size":3385,"mtime":1650438387248,"results":"71","hashOfConfig":"38"},{"size":221,"mtime":1650386579309,"results":"72","hashOfConfig":"38"},{"size":5080,"mtime":1650438379254,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o7x8s9",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/index.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/App.js",["165","166","167","168","169","170","171","172"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./assets/styles/tailwind.css\";\nimport \"./assets/styles/custom.css\";\nimport 'react-notifications/lib/notifications.css';\nimport store, { history } from './components/store';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Profile from './components/Profile/Profile';\nimport Dashboard from './components/pages/Dashboard/Dashboard';\nimport Newad from './components/pages/insert/Newad';\nimport Login from './components/Login';\n\n\nfunction App(props) {\n  return (\n    <>\n      {props.children}\n    </>\n  );\n}\n\nexport default App;\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/reportWebVitals.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Login.js",["173","174","175"],"import React, { useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { login, auth } from \"./store/actions/userAction\"\n\nimport axios from \"axios\"\nimport { useNavigate } from 'react-router';\nfunction Login(props) {\n\n  const { login } = props;\n  const user = useSelector(state => state.users);\n\n  const [inputData, setinputData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const onChangeData = (type, e) => {\n    switch (type) {\n      case \"email\":\n        setinputData({\n          ...{ email: e.target.value }\n        })\n        break;\n      case \"password\":\n        setinputData({\n          ...{ password: e.target.value },\n        })\n        break;\n      default:\n        break;\n    }\n  }\n\n  const history = useNavigate();\n\n  useEffect(() => {\n    console.log(props);\n    props.auth();\n\n    if (user.token) {\n      history('/newad');\n    }\n  }, [user.token]);\n\n  const validateEmail = (email) => {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n  };\n\n  const loginValidate = () => {\n    const email = validateEmail(inputData.email);\n    const password = inputData.password.length < 3;\n\n    !email && console.log(\"Email must be in format example@domain.com\")\n    !password && console.log(\"Password obavezan. Min 4 znaka.\")\n\n    return !email && !password;\n  };\n  const loginHandler = (e) => {\n    e.nativeEvent.preventDefault();\n    if (loginValidate()) {\n      login();\n    }\n  }\n  return (\n    <div className=\"font-sans min-h-screen antialiased bg-gray-900 pt-24 pb-5\">\n      <div className=\"flex flex-col justify-center sm:w-96 sm:m-auto mx-5 mb-5 space-y-8\">\n        <h1 className=\"font-bold text-center text-4xl text-yellow-500\">Udruga<span className=\"text-blue-500\">Svinjogojac</span></h1>\n        <form action=\"#\">\n          <div className=\"flex flex-col bg-white p-10 rounded-lg shadow space-y-6\">\n            <h1 className=\"font-bold text-xl text-center\">Prijava</h1>\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"text\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"Korisničko ime\" onChange={(e => { onChangeData(\"email\", e) })} value={inputData.email} />\n            </div>\n\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"password\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"Password\" onChange={(e => { onChangeData(\"password\", e) })} value={inputData.password} />\n            </div>\n\n            <div className=\"relative\">\n              <input type=\"checkbox\" className=\"inline-block align-middle\" />\n              <label className=\"inline-block align-middle\" htmlFor=\"remember\">Upamti me</label>\n            </div>\n\n            <div className=\"flex flex-col-reverse sm:flex-row sm:justify-between items-center\">\n              <a href=\"#\" className=\"inline-block text-blue-500 hover:text-blue-800 hover:underline\">Forgot your password?</a>\n              <button type=\"submit\" className=\"bg-blue-500 text-white font-bold px-5 py-2 rounded focus:outline-none shadow hover:bg-blue-700 transition-colors\" onClick={loginHandler}>\n                Ulaz\n              </button>\n            </div>\n          </div>\n        </form>\n        <div className=\"flex justify-center text-gray-500 text-sm\">\n          <p>&copy;2021. All right reserved.</p>\n        </div>\n      </div >\n    </div >\n  );\n}\nconst mapStateToProps = (state) => ({ users: state.users })\n\nexport default connect(mapStateToProps, { login, auth })(Login)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Register.js",["176"],"import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from \"./store/actions/userAction\"\nimport axios from \"axios\"\n\nfunction Register(props) {\n\n  const [inputData, setinputData] = useState({\n    email: null,\n    password: null,\n    role: null,\n    lastName: null,\n    firstName: null,\n  });\n\n  const onChangeData = (type, e) => {\n    switch (type) {\n      case \"email\":\n        setinputData({\n          ...inputData,\n          ...{ email: e.target.value }\n        })\n        break;\n      case \"password\":\n        setinputData({\n          ...inputData,\n          ...{ password: e.target.value },\n        })\n        break;\n      case \"role\":\n        setinputData({\n          ...inputData,\n          ...{ password: e.target.value },\n        })\n        break;\n      case \"lastName\":\n        setinputData({\n          ...inputData,\n          ...{ lastName: e.target.value },\n        })\n        break;\n      case \"firstName\":\n        setinputData({\n          ...inputData,\n          ...{ firstName: e.target.value },\n        })\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n  }, []);\n\n  const registerHandler = () => {\n    const registerUserData = {\n      email: \"test@test.hr\",\n      password: \"1234\",\n      firstName: \"test\",\n      lastName: \"user\"\n    }\n\n    axios.post(\"http://localhost:2999/register\", inputData || registerUserData)\n      .then(res => {\n        console.log(res)\n        if (res.data.success === true) {\n          // this.$store.commit('authUser')\n          // this.$router.push({\n          //   name: \"Dashboard\"\n          // })\n        } else {\n          // this.register.status = res.data.message\n        }\n      })\n  }\n\n\n  return (\n    <div className=\"font-sans min-h-screen antialiased bg-gray-900 pt-24 pb-5\">\n      <div className=\"flex flex-col justify-center sm:w-96 sm:m-auto mx-5 mb-5 space-y-8\">\n        <h1 className=\"font-bold text-center text-4xl text-yellow-500\">Svinje<span className=\"text-blue-500\">App</span></h1>\n        <form action=\"#\">\n          <div className=\"flex flex-col bg-white p-10 rounded-lg shadow space-y-6\">\n            <h1 className=\"font-bold text-xl text-center\">Registracija novog korisnika</h1>\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"text\" name=\"email\" id=\"email\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"email\" onChange={(e => { onChangeData(\"email\", e) })} />\n            </div>\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"text\" name=\"firstname\" id=\"firstname\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"firstname\" onChange={(e => { onChangeData(\"firstName\", e) })} />\n            </div>\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"text\" name=\"lastname\" id=\"lastname\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"lastname\" onChange={(e => { onChangeData(\"lastName\", e) })} />\n            </div>\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"text\" name=\"role\" id=\"role\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"role\" onChange={(e => { onChangeData(\"role\", e) })} />\n            </div>\n\n            <div className=\"flex flex-col space-y-1\">\n              <input type=\"password\" name=\"password\" id=\"password\" className=\"border-2 rounded px-3 py-2 w-full focus:outline-none focus:border-blue-400 focus:shadow\" placeholder=\"Password\" onChange={(e => { onChangeData(\"password\", e) })} />\n            </div>\n\n            {/* <div className=\"relative\">\n              <input type=\"checkbox\" name=\"remember\" id=\"remember\" className=\"inline-block align-middle\" />\n              <label className=\"inline-block align-middle\" htmlFor=\"remember\">Upamti me</label>\n            </div> */}\n\n            <div className=\"flex flex-col-reverse sm:flex-column sm:justify-between items-center\">\n              <button type=\"submit\" className=\"bg-blue-500 text-white font-bold px-5 py-2 rounded focus:outline-none shadow hover:bg-blue-700 transition-colors\" onClick={registerHandler}>\n                Login\n              </button>\n              <button type=\"submit\" className=\"bg-blue-500 text-white font-bold px-5 py-2 rounded focus:outline-none shadow hover:bg-blue-700 transition-colors\" onClick={registerHandler}>\n                Registracija\n              </button>\n            </div>\n            <div className=\"flex flex-col-reverse sm:flex-row sm:justify-between items-center\">\n              <a href=\"#\" className=\"inline-block text-blue-500 hover:text-blue-800 hover:underline\">Zaboravljena lozinka</a>\n            </div>\n          </div>\n        </form>\n        <div className=\"flex justify-center text-gray-500 text-sm\">\n          <p>&copy;2021. All right reserved.</p>\n        </div>\n      </div >\n    </div >\n  );\n}\nconst mapStateToProps = (state) => ({ users: state.users })\nexport default connect(mapStateToProps, { login })(Register)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Profile/Profile.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Sidebar/Sidebar.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/notifications/Notifications.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/NewCategory.js",["177"],"import React, { useState } from \"react\";\nimport Sidebar from \"../../Sidebar/Sidebar.js\";\nimport DatePicker from \"react-datepicker\";\nimport { connect } from 'react-redux'\n\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { inputClassName, buttonSubmitClassName } from \"./NewAd.syled.css.js\";\nimport { storeCategory } from \"../../store/actions/articleAction\";\n// components\n\nfunction NewCategory(props) {\n\n  const [articleName, setArticleName] = useState(\"\");\n  const [unitName, setUnitName] = useState(\"\");\n  const [isDisabled, setisDisabled] = useState(true);\n\n\n  const onChangeData = (e) => {\n    setArticleName(e.target.value);\n    const buttonDisabled = e.target.value === \"\";\n    setisDisabled(buttonDisabled)\n  }\n  const onChangeUnit = (e) => {\n    setUnitName(e.target.value);\n    const buttonDisabled = e.target.value === \"\";\n    setisDisabled(buttonDisabled)\n  }\n\n  const onSubmit = () => {\n    props.storeCategory({ name: articleName, unit: unitName });\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"profile-wrapper\">\n        <section className=\"pb-20 relative block bg-gray-900\">\n          <div\n            className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n            style={{ transform: \"translateZ(0)\" }}\n          >\n            <svg\n              className=\"absolute bottom-0 overflow-hidden\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"text-gray-900 fill-current\"\n                points=\"2560 0 2560 100 0 100\"\n              ></polygon>\n            </svg>\n          </div>\n\n          <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n            <div className=\"flex flex-wrap text-center justify-center\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <h2 className=\"text-4xl font-semibold text-white\">\n                  Unos kategorije\n                </h2>\n                <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                  <br />\n                </p>\n              </div>\n            </div>\n\n          </div>\n        </section>\n\n        <section className=\"relative block py-24 lg:pt-0 bg-gray-900\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"flex flex-wrap justify-center lg:-mt-64 -mt-48\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300\">\n                  <div className=\"flex-auto p-5 lg:p-10\">\n                    <h4 className=\"text-2xl font-semibold\">\n                      Unos kategorije\n                    </h4>\n                    <p className=\"leading-relaxed mt-1 mb-4 text-gray-600\">\n\n                    </p>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Naziv kategorije\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={inputClassName}\n                        placeholder=\"npr. Hrana, Prasci, Gorivo\"\n                        value={articleName}\n                        onChange={onChangeData}\n                      />\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Kratica jedinične mjere\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={inputClassName}\n                        placeholder=\"npr. kom, kg, L, \"\n                        value={unitName}\n                        onChange={onChangeUnit}\n                      />\n                    </div>\n                    <div className=\"text-center mt-6\">\n                      <button\n                        className={buttonSubmitClassName(!isDisabled)}\n                        type=\"submit\"\n                        onClick={onSubmit}\n                        disabled={isDisabled}\n                      >\n                        Spremi kategoriju\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { storeCategory })(NewCategory)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/Newarticle.js",["178","179"],"import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../../Sidebar/Sidebar.js\";\nimport DatePicker from \"react-datepicker\";\nimport { connect, useSelector } from 'react-redux';\n\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { inputClassName, buttonSubmitClassName, dropDownClassName } from \"./NewAd.syled.css.js\";\nimport { getCategories, storeArticle } from \"../../store/actions/articleAction\";\n// components\n\nconst categoryDropDown = (items, callback, slectedValue) => {\n  return <div >\n    {items && items.length !== 0 ?\n      <div className=\"mb-3 xl:w-96\">\n        <select className={dropDownClassName} aria-label=\"Default select example\"\n          onChange={callback}\n          value={slectedValue ? slectedValue : items[0]._id}\n        >\n          {items && items.map(item => {\n            return <option key={item._id} value={item._id}>{item.name}</option>\n          })}}\n        </select>\n      </div>\n      : <div>Nema spremljenih kategorija</div>}\n  </div>\n}\n\nfunction Newarticle(props) {\n\n  const [articleName, setArticleName] = useState(\"\");\n  const [categorySelect, setCategorySelect] = useState();\n  const [isDisabled, setisDisabled] = useState(true);\n\n  const categories = useSelector(state => {\n    return state.articlesState.categories\n  });\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } else {\n      console.log(\"CATEGORIES\", categories)\n    }\n  }, [categories]);\n\n  const onChangeData = (e) => {\n    setArticleName(e.target.value);\n    const buttonDisabled = e.target.value === \"\";\n    setisDisabled(buttonDisabled)\n    console.log(buttonDisabled);\n  }\n  const onCategorySet = (e) => {\n    setCategorySelect(e.target.value);\n  }\n\n  const onSubmit = () => {\n    props.storeArticle({\n      name: articleName, category: categorySelect || categories[0]._id\n    });\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"profile-wrapper\">\n        <section className=\"pb-20 relative block bg-gray-900\">\n          <div\n            className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n            style={{ transform: \"translateZ(0)\" }}\n          >\n            <svg\n              className=\"absolute bottom-0 overflow-hidden\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"text-gray-900 fill-current\"\n                points=\"2560 0 2560 100 0 100\"\n              ></polygon>\n            </svg>\n          </div>\n\n          <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n            <div className=\"flex flex-wrap text-center justify-center\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <h2 className=\"text-4xl font-semibold text-white\">\n                  Unos artikla\n                </h2>\n                <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                  <br />\n                </p>\n              </div>\n            </div>\n\n          </div>\n        </section>\n\n        <section className=\"relative block py-24 lg:pt-0 bg-gray-900\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"flex flex-wrap justify-center lg:-mt-64 -mt-48\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300\">\n                  <div className=\"flex-auto p-5 lg:p-10\">\n                    <h4 className=\"text-2xl font-semibold\">\n                      Unos artikla\n                    </h4>\n                    <p className=\"leading-relaxed mt-1 mb-4 text-gray-600\">\n\n                    </p>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Odaberi kategoriju\n                      </label>\n                      {categoryDropDown(categories, onCategorySet, categorySelect)}\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Naziv artikla\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={inputClassName}\n                        placeholder=\"Naziv artikla\"\n                        value={articleName}\n                        onChange={onChangeData}\n                      />\n                    </div>\n                    <div className=\"text-center mt-6\">\n                      <button\n                        className={buttonSubmitClassName(!isDisabled)}\n                        type=\"submit\"\n                        onClick={onSubmit}\n                        disabled={isDisabled}\n                      >\n                        Spremi Artikal\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { getCategories, storeArticle })(Newarticle)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Dashboard/Dashboard.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/ViewAds.js",["180","181","182","183"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport CardTable from \"../../Tables/CardTable\";\nimport { connect, useSelector } from 'react-redux';\nimport { getAdds, getArticle } from \"../../store/actions/articleAction\"\nimport ArticleDropdown from '../../article/ArticleDropdown';\nimport { getArticleName } from '../../store/reducers/articleReducer';\nimport ArticleTable from '../../Tables/ArticleTable';\nimport ImageUpload from '../../imageupload/ImageUpload';\nimport { useNavigate } from 'react-router';\n// components\n\nfunction ViewAds(props) {\n\n  const ads = useSelector(state => {\n    return state.articlesState.ads\n  });\n  const articles = useSelector(state => {\n    return state.articlesState.articles\n  });\n\n  const [items, setItems] = useState({\n    ///arrays\n    all: null,\n    buy: null,\n    sell: null,\n    activeItems: null,\n    inActiveItems: null,\n    ended: null,\n    ///selecitons\n    articleItems: null,\n    selectedArticle: null,\n\n\n  });\n\n  const onAdsAndArticlesLoaded = () => {\n    if (ads && articles) {\n\n      const buyItems = ads.filter(item => item.buysell === 1);\n      const sellItems = ads.filter(item => item.buysell === 2);\n      const activeItems = ads.filter(item => item.status === 1);\n      const inActiveItems = ads.filter(item => item.status === 2);\n      const ended = ads.filter(item => item.status === 3);\n\n      setItems({\n        all: ads,\n        buy: buyItems,\n        sell: sellItems,\n        activeItems,\n        inActiveItems,\n        ended\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!ads) {\n      props.getAdds();\n\n    } else {\n      onAdsAndArticlesLoaded()\n    }\n  }, [ads]);\n\n  useEffect(() => {\n    if (!articles) {\n      props.getArticle();\n    } else {\n      onAdsAndArticlesLoaded()\n    }\n  }, [articles]);\n\n  const onSelectArticle = (articleId) => {\n    let articleItems;\n    if (items.all) {\n      articleItems = items.all.filter(item => item.article === articleId)\n    }\n    setItems({ ...items, selectedArticle: articleId, articleItems });\n    console.log(getArticleName(articleId))\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            {/* <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section> */}\n            <ArticleDropdown onSelect={onSelectArticle}></ArticleDropdown>\n            {<CardTable title={`ARTIKAL - ${getArticleName(items.selectedArticle)}`} color={\"dark\"} data={items.articleItems} getNameFromId={(id) => { getArticleName({ _id: id }, articles) }}></CardTable>}\n            {<CardTable title=\"POTRAŽNJA\" color={\"dark\"} data={items.buy}></CardTable>}\n            {<CardTable title=\"PONUDA\" color={\"dark\"} data={items.sell}></CardTable>}\n            {<CardTable title=\"AKTIVNI\" color={\"dark\"} data={items.activeItems}></CardTable>}\n            {<CardTable title=\"NEAKTIVNI\" color={\"dark\"} data={items.inActiveItems}></CardTable>}\n            {<CardTable title=\"IZVRŠENI\" color={\"dark\"} data={items.ended}></CardTable>}\n          </div>\n          <ImageUpload></ImageUpload>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.articlesState })\nexport default connect(mapStateToProps, { getAdds, getArticle })(ViewAds)","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/Newad.js",["184","185","186","187","188"],"import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../../Sidebar/Sidebar.js\";\nimport DatePicker from \"react-datepicker\";\nimport { connect, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { radioButtonInputCss, inputClassName, dropDownClassName } from \"./NewAd.syled.css.js\";\nimport { storeNewItem, getArticle, getCategories } from \"../../store/actions/articleAction.js\";\nimport ArticleDropdown from \"../../article/ArticleDropdown.js\";\nimport Dropdown from \"../../dropdown/Dropdown.js\";\n\nconst _items = [\n  {\n    _id: \"HR\",\n    name: \"HR\"\n  },\n  {\n    _id: \"EU\",\n    name: \"EU\"\n  },\n  {\n    _id: \"AU\",\n    name: \"AU\"\n  },\n]\n\n\nfunction Newad(props) {\n\n  const history = useNavigate();\n  const user = useSelector(state => state.users);\n  const categories = useSelector(state => state.articlesState.categories);\n  const articles = useSelector(state => state.articlesState.articles);\n\n  const [submitData, setsubmitData] = useState({\n    article: null,\n    owner: null,\n    ownerId: null,\n    entryDate: new Date(),\n    origin: \"HR\",\n    wantedPrice: null,\n    finishDate: new Date(),\n    comment: null,\n    adStatus: \"1\",\n    buysell: \"1\",\n  });\n\n  const [filteredValues, setFilteredValues] = useState({\n    dropDownItems: null,\n    selectedCategorie: null,\n    selectedArticle: null,\n    prefferedUnit: \"kom\"\n  })\n\n  useEffect(() => {\n    if (user.userData) {\n      setsubmitData({\n        ...submitData,\n        \"owner\": `${user.userData.firstName} ${user.userData.lastName}`,\n        \"ownerId\": user.userData._id\n      })\n    }\n    if (!user.token) {\n      history('/');\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (!articles) {\n      props.getArticle();\n    } if (categories && articles) {\n      filterDropDown()\n    }\n  }, [articles]);\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } if (categories && articles) {\n      filterDropDown()\n    }\n  }, [categories]);\n\n\n  const filterDropDown = (categorie) => {\n    categorie = categorie || categories[0]._id;\n    const prefferedUnit = categories.filter(item => item._id === categorie)[0].unit;\n    const dropDownItems = articles.filter(item => item.category === categorie)\n    const selectedArticle = dropDownItems[0] ? dropDownItems[0]._id : null;\n    setFilteredValues({ ...filteredValues, dropDownItems: dropDownItems, selectedCategorie: categorie, selectedArticle: selectedArticle, prefferedUnit })\n  }\n\n  const onChangeData = (prop, e) => {\n    const data = e.target ? e.target.value : e;\n    setsubmitData({\n      ...submitData, [prop]: data,\n      \"article\": filteredValues.selectedArticle,\n      \"category\": filteredValues.selectedCategorie,\n    })\n  }\n\n  console.log(submitData)\n\n  const onSelectArticle = (data) => {\n    setFilteredValues({ ...filteredValues, selectedArticle: data.target.value })\n  }\n\n  const onSelectCategory = (data) => {\n    filterDropDown(data.target.value)\n  }\n\n  const onSubmit = () => {\n    const callback = () => {\n      history('/viewads');\n    }\n    props.storeNewItem(submitData, callback);\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"profile-wrapper\">\n        <section className=\"relative block bg-gray-900\">\n          <div\n            className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n            style={{ transform: \"translateZ(0)\" }}\n          >\n          </div>\n          <div className=\"container mx-auto px-4 lg:pt-12 lg:pb-64\">\n            <div className=\"flex flex-wrap text-center justify-center\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <h2 className=\"text-4xl font-semibold text-white\">\n                  Unos oglasa\n                </h2>\n                <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                  Pomno unesite podatke potrene za unos oglasa. Unos člana može isključivo mjenjati administrator.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"relative block py-24 lg:pt-0 bg-gray-900\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"flex flex-wrap justify-center lg:-mt-64 -mt-48\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300\">\n                  <div className=\"flex-auto p-5 lg:p-10\">\n                    <h4 className=\"text-2xl font-semibold\">\n                      Oglas\n                    </h4>\n                    <p className=\"leading-relaxed mt-1 mb-4 text-gray-600\">\n\n                    </p>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Ponuda/Potražnja\n                      </label>\n                      <div className=\"relative\">\n\n                        <div className=\"flex\">\n                          <div className=\"form-check form-check-inline\">\n                            <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions2\" id=\"buy\" value=\"1\" onChange={(e) => { (onChangeData(\"buysell\", e)) }} checked={submitData.buysell === \"1\"} />\n                            <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"buy\">Ponuda</label>\n                          </div>\n                          <div className=\"form-check form-check-inline\">\n                            <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions2\" id=\"sell\" value=\"2\" onChange={(e) => { (onChangeData(\"buysell\", e)) }} checked={submitData.buysell === \"2\"} />\n                            <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"sell\">Potražnja</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Datum unosa\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                          <svg className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\"></path></svg>\n                        </div>\n                        <DatePicker className={inputClassName} selected={submitData.entryDate} onChange={(date: Date) => onChangeData(\"entryDate\", date)} minDate={new Date()} />\n                      </div>\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Vlasnik oglasa\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={inputClassName}\n                        placeholder=\"Full Name\"\n                        disabled\n                        value={(user && user.userData) ? `${user.userData.firstName} ${user.userData.lastName}` : \"\"}\n                      />\n                    </div>\n\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Kategorija\n                      </label>\n                      <Dropdown items={categories} onSelect={onSelectCategory} selectedItem={filteredValues.selectedCategorie}></Dropdown>\n                    </div>\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Artikal\n                      </label>\n                      <Dropdown items={filteredValues.dropDownItems} onSelect={onSelectArticle} selectedItem={filteredValues.selectedArticle}></Dropdown>\n                    </div>\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Količina\n                      </label>\n                      <div>\n                        <input\n                          type=\"number\"\n                          className={inputClassName}\n                          placeholder=\"količina\"\n                          onChange={(e) => { onChangeData(\"amount\", e) }}\n                        />\n                        <label\n                          className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                          htmlFor=\"email\"\n                        >\n                          {filteredValues.prefferedUnit}\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Podrijetlo\n                      </label>\n                      <Dropdown items={_items} onSelect={(e) => { onChangeData(\"origin\", e) }} selectedItem={_items[0].id}></Dropdown>\n                    </div>\n\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Očekivana cijena\n                      </label>\n                      <input\n                        type=\"number\"\n                        className={inputClassName}\n                        placeholder=\"u kn\"\n                        onChange={(e) => { onChangeData(\"wantedPrice\", e) }}\n                      />\n                    </div>\n\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Očekivani rok za izvršenje\n                      </label>\n                      <div className=\"relative\">\n                        <DatePicker className={inputClassName} onChange={(date: Date) => onChangeData(\"finishDate\", date)} minDate={new Date()}\n                          selected={submitData.finishDate}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"message\"\n                      >\n                        Napomena\n                      </label>\n                      <textarea\n                        rows=\"4\"\n                        cols=\"80\"\n                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:shadow-outline w-full\"\n                        placeholder=\"Type a message...\"\n                        onChange={(e) => { onChangeData(\"comment\", e) }}\n                      />\n                    </div>\n\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"message\"\n                      >\n                        Status\n                      </label>\n                      <div>\n                        <div className=\"form-check form-check-inline\">\n                          <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"1\" checked={submitData.adStatus === \"1\"} onChange={(e) => { (onChangeData(\"adStatus\", e)) }} />\n                          <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"inlineRadio1\">Aktivno</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                          <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"2\" checked={submitData.adStatus === \"2\"} onChange={(e) => { (onChangeData(\"adStatus\", e)) }} />\n                          <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"inlineRadio2\">Neaktivno</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                          <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" value=\"3\" checked={submitData.adStatus === \"3\"} onChange={(e) => { (onChangeData(\"adStatus\", e)) }} disabled />\n                          <label className=\"form-check-label inline-block text-gray-800 opacity-50\" htmlFor=\"inlineRadio3\">Izvršeno</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-center mt-6\">\n                      <button\n                        className=\"bg-gray-900 text-white active:bg-gray-700 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                        type=\"button\"\n                        onClick={onSubmit}\n                      >\n                        Spremi oglas\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.users })\nexport default connect(mapStateToProps, { storeNewItem, getCategories, getArticle })(Newad)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/Editarticle.js",["189","190","191"],"import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../../Sidebar/Sidebar.js\";\nimport DatePicker from \"react-datepicker\";\nimport { connect, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { inputClassName, buttonSubmitClassName, dropDownClassName, btnDeleteClassName } from \"./NewAd.syled.css.js\";\nimport { getCategories, updateArticle, getArticleById, deleteArticle } from \"../../store/actions/articleAction\";\nimport { getCategoryName } from \"../../store/reducers/articleReducer.js\";\n// components\n\nconst categoryDropDown = (items, callback, slectedValue) => {\n  return <div >\n    {items && items.length !== 0 ?\n      <div className=\"mb-3 xl:w-96\">\n        <select className={dropDownClassName} aria-label=\"Default select example\"\n          onChange={callback}\n          value={slectedValue ? slectedValue : items[0]._id}\n        >\n          {items && items.map(item => {\n            return <option key={item._id} value={item._id}>{item.name}</option>\n          })}}\n        </select>\n      </div>\n      : <div>Nema spremljenih kategorija</div>}\n  </div>\n}\n\nfunction Editarticle(props) {\n  const params = useParams();\n  const history = useNavigate();\n  const [articleName, setArticleName] = useState(\"\");\n  const [categorySelect, setCategorySelect] = useState();\n  const [isDisabled, setisDisabled] = useState(true);\n\n  const categories = useSelector(state => {\n    return state.articlesState.categories\n  });\n\n  useEffect(() => {\n    const callback = (response) => {\n      console.log(response);\n      // setLoadedArticle(response);\n      setArticleName(response ? response[0].name : articleName)\n    };\n    props.getArticleById(params.id, callback);\n  }, []);\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } else {\n      if (categories.length > 0)\n        setCategorySelect(categories[0]._id);\n    }\n  }, [categories]);\n\n  const onChangeData = (e) => {\n    setArticleName(e.target.value);\n    const buttonDisabled = e.target.value === \"\";\n    setisDisabled(buttonDisabled)\n    console.log(buttonDisabled);\n  }\n  const onCategorySet = (e) => {\n    setCategorySelect(e.target.value);\n  }\n\n  const onSubmit = () => {\n    const callback = () => {\n      history('/viewarticles');\n    }\n    console.log(getCategoryName(categorySelect))\n    props.updateArticle(params.id, {\n      categoryName: getCategoryName(categorySelect),\n      name: articleName, category: categorySelect\n    }, callback);\n  }\n\n  const onDelete = () => {\n    props.deleteArticle(params.id, () => {\n      history('/viewarticles');\n    })\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"profile-wrapper\">\n        <section className=\"pb-20 relative block bg-gray-900\">\n          <div\n            className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n            style={{ transform: \"translateZ(0)\" }}\n          >\n            <svg\n              className=\"absolute bottom-0 overflow-hidden\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              preserveAspectRatio=\"none\"\n              version=\"1.1\"\n              viewBox=\"0 0 2560 100\"\n              x=\"0\"\n              y=\"0\"\n            >\n              <polygon\n                className=\"text-gray-900 fill-current\"\n                points=\"2560 0 2560 100 0 100\"\n              ></polygon>\n            </svg>\n          </div>\n\n          <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n            <div className=\"flex flex-wrap text-center justify-center\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <h2 className=\"text-4xl font-semibold text-white\">\n                  Uređivanje artikla\n                </h2>\n                <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                  <br />\n                </p>\n              </div>\n            </div>\n\n          </div>\n        </section>\n\n        <section className=\"relative block py-24 lg:pt-0 bg-gray-900\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"flex flex-wrap justify-center lg:-mt-64 -mt-48\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300\">\n                  <div className=\"flex-auto p-5 lg:p-10\">\n                    <h4 className=\"text-2xl font-semibold\">\n                      Unos artikla\n                    </h4>\n                    <p className=\"leading-relaxed mt-1 mb-4 text-gray-600\">\n\n                    </p>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Odaberi kategoriju\n                      </label>\n                      {categoryDropDown(categories, onCategorySet, categorySelect)}\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Naziv artikla\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={inputClassName}\n                        placeholder=\"Naziv artikla\"\n                        value={articleName}\n                        onChange={onChangeData}\n                      />\n                    </div>\n                    <div className=\"text-center mt-6\">\n                      <button\n                        className={buttonSubmitClassName(!isDisabled)}\n                        type=\"submit\"\n                        onClick={onSubmit}\n                        disabled={isDisabled}\n                      >\n                        Spremi Artikal\n                      </button>\n                      <button\n                        className={btnDeleteClassName(true)}\n                        type=\"submit\"\n                        onClick={onDelete}\n                      >\n                        Obriši artikal\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { getCategories, updateArticle, getArticleById, deleteArticle })(Editarticle)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/Editad.js",["192","193","194","195","196","197","198","199","200","201"],"import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../../Sidebar/Sidebar.js\";\nimport DatePicker from \"react-datepicker\";\nimport { connect, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { radioButtonInputCss, inputClassName, dropDownClassName } from \"../insert/NewAd.syled.css.js\";\nimport { storeNewItem, getArticle, getCategories, getAdById, editExistingAd, getAdds } from \"../../store/actions/articleAction.js\";\nimport { getUsers } from \"../../store/actions/userAction\";\nimport ArticleDropdown from \"../../article/ArticleDropdown.js\";\nimport Dropdown from \"../../dropdown/Dropdown.js\";\nimport { getUserFullName } from \"../../store/reducers/userReducer.js\";\n\nconst _items = [\n  {\n    _id: \"HR\",\n    name: \"HR\"\n  },\n  {\n    _id: \"EU\",\n    name: \"EU\"\n  },\n  {\n    _id: \"AU\",\n    name: \"AU\"\n  },\n]\n\n\nfunction Editad(props) {\n  console.log(props)\n  const params = useParams();\n  window.params = params;\n  console.log(params.id)\n\n  const history = useNavigate();\n  const user = useSelector(state => state.users);\n  const users = useSelector(state => state.users.users);\n  const categories = useSelector(state => state.articlesState.categories);\n  const articles = useSelector(state => state.articlesState.articles);\n  const editedAd = useSelector(state => state.articlesState.editedAd);\n\n  const [submitData, setsubmitData] = useState({\n    article: null,\n    owner: null,\n    ownerId: null,\n    entryDate: new Date(),\n    origin: \"HR\",\n    wantedPrice: null,\n    finishDate: new Date(),\n    comment: null,\n    adStatus: 1,\n    buysell: 1,\n  });\n  const [selectedOwner, setSelctedOwner] = useState(null);\n  const onSelectDropDownOwner = (data) => {\n    setsubmitData({\n      ...submitData,\n      owner: getUserFullName(data.target.value),\n      ownerId: data.target.value,\n    })\n  }\n\n  const [filteredValues, setFilteredValues] = useState({\n    dropDownItems: null,\n    selectedCategorie: null,\n    selectedArticle: null,\n    prefferedUnit: \"kom\"\n  })\n  const [fetchedUsers, setFetchedUsers] = useState(null)\n\n\n  useEffect(() => {\n    if (user.userData) {\n      setsubmitData({\n        ...submitData,\n        \"owner\": `${user.userData.firstName} ${user.userData.lastName}`,\n        \"ownerId\": user.userData._id\n      })\n    }\n    if (!user.token) {\n      // history('/');\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (!articles) {\n      props.getArticle();\n    } if (categories && articles) {\n      filterDropDown()\n    }\n  }, [articles]);\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } if (categories && articles) {\n      filterDropDown()\n    }\n  }, [categories]);\n\n  useEffect(() => {\n    if (!users) {\n      props.getUsers();\n    } else {\n      setFetchedUsers(users)\n    }\n  }, [users]);\n\n  useEffect(() => {\n    const callback = (response) => {\n      const data = { ...response };\n      data.finishDate = Date.parse(data.finishDate)\n      data.entryDate = Date.parse(data.entryDate)\n      setsubmitData(data);\n      const setFilteredCategory = () => {\n        if (articles && categories) {\n          filterDropDown(response.category)\n        } else {\n          setTimeout(() => {\n            setFilteredCategory();\n          }, 500);\n        }\n      }\n      setTimeout(() => {\n        setFilteredCategory();\n      }, 500);\n    }\n    props.getAdById(params.id || \"62436a333644fd0dc9d837dc\", callback);\n  }, []);\n\n\n  const filterDropDown = (categorie) => {\n    categorie = categorie || categories[0]._id;\n    const prefferedUnit = categories.filter(item => item._id === categorie)[0].unit;\n    const dropDownItems = articles.filter(item => item.category === categorie)\n    const selectedArticle = dropDownItems[0] ? dropDownItems[0]._id : null;\n    setFilteredValues({ ...filteredValues, dropDownItems: dropDownItems, selectedCategorie: categorie, selectedArticle: selectedArticle, prefferedUnit })\n  }\n\n  const onChangeData = (prop, e) => {\n    let data = e.target ? e.target.value : e;\n    if (prop === \"buysell\" || prop === \"status\") {\n      data = Number(data);\n    }\n    setsubmitData({\n      ...submitData, [prop]: data,\n      \"article\": filteredValues.selectedArticle,\n      \"category\": filteredValues.selectedCategorie,\n    })\n  }\n\n  console.log(submitData)\n\n  const onSelectArticle = (data) => {\n    setFilteredValues({ ...filteredValues, selectedArticle: data.target.value })\n  }\n\n  const onSelectCategory = (data) => {\n    filterDropDown(data.target.value)\n  }\n\n  const onSubmit = () => {\n    const callback = () => {\n      props.getAdds();\n      history('/viewads');\n    }\n    props.editExistingAd(submitData, callback);\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"profile-wrapper\">\n        <section className=\"relative block bg-gray-900\">\n          <div\n            className=\"bottom-auto top-0 left-0 right-0 w-full absolute pointer-events-none overflow-hidden -mt-20 h-20\"\n            style={{ transform: \"translateZ(0)\" }}\n          >\n          </div>\n          <div className=\"container mx-auto px-4 lg:pt-12 lg:pb-64\">\n            <div className=\"flex flex-wrap text-center justify-center\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <h2 className=\"text-4xl font-semibold text-white\">\n                  Uredi oglas\n                </h2>\n                <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                  Pomno unesite podatke potrene za unos oglasa. Unos člana može isključivo mjenjati administrator.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"relative block py-24 lg:pt-0 bg-gray-900\">\n          <div className=\"container mx-auto px-4\">\n            <div className=\"flex flex-wrap justify-center lg:-mt-64 -mt-48\">\n              <div className=\"w-full lg:w-6/12 px-4\">\n                <div className=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-gray-300\">\n                  <div className=\"flex-auto p-5 lg:p-10\">\n                    <h4 className=\"text-2xl font-semibold\">\n                      Oglas\n                    </h4>\n                    <p className=\"leading-relaxed mt-1 mb-4 text-gray-600\">\n\n                    </p>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Ponuda/Potražnja\n                      </label>\n                      <div className=\"relative\">\n\n                        <div className=\"flex\">\n                          <div className=\"form-check form-check-inline\">\n                            <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions2\" id=\"buy\" value={1} onChange={(e) => { (onChangeData(\"buysell\", e)) }} checked={submitData.buysell === 1} />\n                            <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"buy\">Ponuda</label>\n                          </div>\n                          <div className=\"form-check form-check-inline\">\n                            <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions2\" id=\"sell\" value={2} onChange={(e) => { (onChangeData(\"buysell\", e)) }} checked={submitData.buysell === 2} />\n                            <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"sell\">Potražnja</label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Datum unosa\n                      </label>\n                      <div className=\"relative\">\n                        <div className=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n                          <svg className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clipRule=\"evenodd\"></path></svg>\n                        </div>\n                        <DatePicker className={inputClassName} selected={submitData.entryDate} onChange={(date: Date) => onChangeData(\"entryDate\", date)} minDate={new Date()} />\n                      </div>\n                    </div>\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Vlasnik oglasa\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={inputClassName}\n                        placeholder=\"Full Name\"\n                        value={submitData.owner || \"\"}\n                        disabled\n                      />\n                      <Dropdown items={fetchedUsers} onSelect={(data) => { onSelectDropDownOwner(data) }} selectedItem={submitData.ownerId} notfound={\"nema spremljenih korisnika\"}></Dropdown>\n                    </div>\n\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Kategorija\n                      </label>\n                      <Dropdown items={categories} onSelect={onSelectCategory} selectedItem={filteredValues.selectedCategorie}></Dropdown>\n                    </div>\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Artikal\n                      </label>\n                      <Dropdown items={filteredValues.dropDownItems} onSelect={onSelectArticle} selectedItem={filteredValues.selectedArticle}></Dropdown>\n                    </div>\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Količina\n                      </label>\n                      <div>\n                        <input\n                          type=\"number\"\n                          className={inputClassName}\n                          placeholder=\"količina\"\n                          value={submitData.amount || 0}\n                          onChange={(e) => { onChangeData(\"amount\", e) }}\n                        />\n                        <label\n                          className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                          htmlFor=\"email\"\n                        >\n                          {filteredValues.prefferedUnit}\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"email\"\n                      >\n                        Podrijetlo\n                      </label>\n                      <Dropdown items={_items} onSelect={(e) => { onChangeData(\"origin\", e) }} selectedItem={_items[0].id}></Dropdown>\n                    </div>\n\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Očekivana cijena\n                      </label>\n                      <input\n                        type=\"number\"\n                        className={inputClassName}\n                        placeholder=\"u kn\"\n                        value={submitData.wantedPrice || 0}\n                        onChange={(e) => { onChangeData(\"wantedPrice\", e) }}\n                      />\n                    </div>\n\n                    <div className=\"relative w-full mb-3 mt-8\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"full-name\"\n                      >\n                        Očekivani rok za izvršenje\n                      </label>\n                      <div className=\"relative\">\n                        <DatePicker className={inputClassName} onChange={(date: Date) => onChangeData(\"finishDate\", date)} minDate={new Date()}\n                          selected={submitData.finishDate}\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"message\"\n                      >\n                        Napomena\n                      </label>\n                      <textarea\n                        rows=\"4\"\n                        cols=\"80\"\n                        className=\"px-3 py-3 placeholder-gray-400 text-gray-700 bg-white rounded text-sm shadow focus:outline-none focus:shadow-outline w-full\"\n                        value={submitData.comment}\n                        placeholder=\"Type a message...\"\n                        onChange={(e) => { onChangeData(\"comment\", e) }}\n                      />\n                    </div>\n\n                    <div className=\"relative w-full mb-3\">\n                      <label\n                        className=\"block uppercase text-gray-700 text-xs font-bold mb-2\"\n                        htmlFor=\"message\"\n                      >\n                        Status\n                      </label>\n                      <div>\n                        <div className=\"form-check form-check-inline\">\n                          <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value={1} checked={submitData.status === 1} onChange={(e) => { (onChangeData(\"status\", e)) }} />\n                          <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"inlineRadio1\">Aktivno</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                          <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value={2} checked={submitData.status === 2} onChange={(e) => { (onChangeData(\"status\", e)) }} />\n                          <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"inlineRadio2\">Neaktivno</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                          <input className={radioButtonInputCss} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" value={3} checked={submitData.status === 3} onChange={(e) => { (onChangeData(\"status\", e)) }} />\n                          <label className=\"form-check-label inline-block text-gray-800\" htmlFor=\"inlineRadio3\">Izvršeno</label>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"text-center mt-6\">\n                      <button\n                        className=\"bg-gray-900 text-white active:bg-gray-700 text-sm font-bold uppercase px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\n                        type=\"button\"\n                        onClick={onSubmit}\n                      >\n                        Spremi oglas\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.users })\nexport default connect(mapStateToProps, { storeNewItem, getCategories, getArticle, getAdById, getUsers, editExistingAd, getAdds })(Editad)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/Potraznja.js",["202","203","204","205","206","207"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport { connect, useSelector } from 'react-redux';\nimport { getAdds, getArticle, getCategories } from \"../../store/actions/articleAction\"\nimport { getArticleName, getCategoryName } from '../../store/reducers/articleReducer';\nimport TotalArticlesTable from '../../Tables/TotalArticlesTable';\nimport Dropdown from '../../dropdown/Dropdown';\n// components\n\n\nfunction Potraznja(props) {\n\n  const ads = useSelector(state => {\n    return state.articlesState.ads\n  });\n  const articles = useSelector(state => {\n    return state.articlesState.articles\n  });\n  const categories = useSelector(state => {\n    return state.articlesState.categories\n  });\n\n  const [items, setItems] = useState({\n    ///arrays\n    all: null,\n    buy: null,\n    sell: null,\n    activeItems: null,\n    inActiveItems: null,\n    ended: null,\n    ///selecitons\n    articleItems: null,\n    selectedArticle: null,\n\n    selectedCategory: null,\n    allItems: [],\n  });\n\n  const onAdsAndArticlesLoaded = () => {\n    if (ads && articles) {\n\n      const buyItems = ads.filter(item => item.buysell === 1);\n      const sellItems = ads.filter(item => item.buysell === 2);\n      const activeItems = ads.filter(item => item.status === 1);\n      const inActiveItems = ads.filter(item => item.status === 2);\n      const ended = ads.filter(item => item.status === 3);\n\n      const filteredItems = getFilteredItems(items.selectedCategory, sellItems);\n\n      const allItems = []\n      categories.map((item, index) => {\n        allItems.push({\n          name: item.name,\n          items: getFilteredItems(item._id, sellItems),\n          id: index\n        });\n      })\n\n      setItems({\n        ...items,\n        all: ads,\n        buy: buyItems,\n        sell: sellItems,\n        activeItems,\n        inActiveItems,\n        ended,\n\n        filteredByCategory: filteredItems,\n        allItems\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!ads) {\n\n    } else {\n      onAdsAndArticlesLoaded()\n    }\n  }, [ads, articles]);\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } else {\n      if (categories.length > 1) {\n        onSelectCategory(categories[0]._id)\n      }\n      props.getAdds();\n      props.getArticle();\n    }\n  }, [categories]);\n\n\n  const getFilteredItems = (categoryId, sell) => {\n    sell = sell || items.sell;\n    if (sell) {\n      const data = sell.filter(item => item.category === categoryId)\n\n      const filteredData = {};\n      data.map(item => {\n        if (!filteredData[item.article]) {\n          filteredData[item.article] = {};\n          filteredData[item.article].wantedPrice = 0;\n          filteredData[item.article].amount = 0;\n          filteredData[item.article].total = 0;\n          filteredData[item.article]._id = item.article;\n        }\n        filteredData[item.article].name = getArticleName(item.article)\n        filteredData[item.article].wantedPrice += item.wantedPrice;\n        filteredData[item.article].amount += item.amount;\n        filteredData[item.article].total++;\n\n      });\n      const d = []\n      Object.keys(filteredData).forEach(key => {\n        d.push(filteredData[key])\n      });\n      return d;\n    }\n    return [];\n  }\n\n  const onSelectCategory = (e) => {\n    const value = e.target ? e.target.value : e;\n    const filteredData = getFilteredItems(value);\n    setItems({ ...items, selectedCategory: value, filteredByCategory: filteredData });\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            {/* <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section> */}\n            {items.allItems && items.allItems.map(item => {\n              return < TotalArticlesTable key={item.id} data={item.items} title={`Potražnja-${item.name}`}></TotalArticlesTable>\n            })}\n          </div>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.articlesState })\nexport default connect(mapStateToProps, { getAdds, getArticle, getCategories })(Potraznja)","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Users/Users.js",["208","209","210","211"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport { connect, useSelector } from 'react-redux';\nimport { getUsers } from '../../store/actions/userAction';\nimport { getAdds } from '../../store/actions/articleAction';\nimport UserTable from '../../Tables/UserTable';\n// components\n\nfunction Users(props) {\n\n  const users = useSelector(state => {\n    return state.users.users\n  });\n\n  const ads = useSelector(state => {\n    return state.articlesState.ads\n  });\n\n  const [filteredUsers, setFilteredUsers] = useState(null)\n\n  useEffect(() => {\n    if (!users) {\n      props.getUsers();\n    } else {\n      setItems()\n    }\n  }, [users]);\n\n\n  useEffect(() => {\n    if (!ads) {\n      props.getAdds();\n    } else {\n      setItems()\n    }\n  }, [ads]);\n\n  const setItems = () => {\n    if (ads && users) {\n      const adsByUsers = {};\n      const arrayOfAds = []\n      users.map(user => {\n        ads.map(ad => {\n          if (!adsByUsers[user._id]) {\n            adsByUsers[user._id] = {};\n            adsByUsers[user._id].user = user;\n            adsByUsers[user._id].ads = [];\n          }\n          if (ad.ownerId === user._id) {\n            adsByUsers[user._id].ads.push(ad)\n          }\n        })\n        let entryDate = 0;\n        if (adsByUsers[user._id].ads.length > 0) {\n          entryDate = adsByUsers[user._id].ads[adsByUsers[user._id].ads.length - 1].entryDate\n        }\n        arrayOfAds.push({\n          user: user,\n          total: adsByUsers[user._id].ads.length,\n          date: entryDate\n        })\n      })\n      console.log(adsByUsers)\n      console.log(arrayOfAds)\n      setFilteredUsers(arrayOfAds)\n    }\n  }\n\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            {/* <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section> */}\n            {filteredUsers && <UserTable data={filteredUsers} title={\"Članovi\"}></UserTable>}\n          </div>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { getUsers, getAdds })(Users)","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Articles/ViewArticles.js",["212","213","214","215","216"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport ArticleTable from \"../../Tables/ArticleTable\";\nimport { connect, useSelector } from 'react-redux';\nimport { getAdds, getArticle, getCategories } from \"../../store/actions/articleAction\"\n// components\n\nlet names = {};\nconst getCategorieName = (id, categorie) => {\n  if (names[id]) {\n    return names[id];\n  }\n  const item = categorie.filter(item => item._id === id);\n  if (item[0]) {\n    names[id] = categorie.filter(item => item._id === id)[0].name\n  }\n  return names[id];\n}\n\n\nfunction ViewArticles(props) {\n\n  const articles = useSelector(state => {\n    return state.articlesState.articles\n  });\n  const categories = useSelector(state => {\n    return state.articlesState.categories\n  });\n\n  useEffect(() => {\n    if (!articles) {\n      props.getArticle();\n    } else {\n\n    }\n  }, [articles]);\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } else {\n\n    }\n  }, [categories]);\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section>\n            {categories && articles && <ArticleTable color={\"dark\"} data={articles}></ArticleTable>}\n          </div>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.articlesState })\nexport default connect(mapStateToProps, { getArticle, getCategories })(ViewArticles)","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Users/UserAds.js",["217","218","219","220"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport { connect, useSelector } from 'react-redux';\nimport { getUserAds } from '../../store/actions/userAction';\nimport UserTable from '../../Tables/UserTable';\nimport { useNavigate, useParams } from 'react-router';\nimport CardTable from '../../Tables/CardTable';\n// components\n\nfunction UserAds(props) {\n\n  const params = useParams();\n  window.params = params;\n\n  const ads = useSelector(state => {\n    return state.articlesState.ads\n  });\n\n  const [userAds, setUserAds] = useState(null)\n\n  useEffect(() => {\n    const callback = (response) => {\n      setUserAds(response);\n    }\n    props.getUserAds(params.id, callback);\n  }, []);\n\n  console.log(userAds)\n\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            {/* <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section> */}\n            {/* {filteredUsers && <UserTable data={filteredUsers} title={\"Članovi\"}></UserTable>} */}\n            {userAds && <CardTable title=\"Svi oglasi člana\" color={\"dark\"} data={userAds}></CardTable>}\n          </div>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { getUserAds })(UserAds)","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Users/ArticleAds.js",["221","222","223","224"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport { connect, useSelector } from 'react-redux';\nimport { getAdsByArticleId } from '../../store/actions/articleAction';\nimport UserTable from '../../Tables/UserTable';\nimport { useNavigate, useParams } from 'react-router';\nimport CardTable from '../../Tables/CardTable';\nimport { getArticleName } from '../../store/reducers/articleReducer';\n// components\n\nfunction ArticleAds(props) {\n\n  const params = useParams();\n  window.params = params;\n\n  const [state, setState] = useState({\n    allAdsByArticle: null,\n    title: \"\",\n  })\n\n  useEffect(() => {\n    const callback = (response) => {\n      const title = getArticleName(params.articleId)\n      setState({ ...state, allAdsByArticle: response, title });\n    }\n    props.getAdsByArticleId(params.articleId, callback);\n  }, []);\n\n\n\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            {/* <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section> */}\n            {/* {allAdsByArticle && <CardTable title=\"Svi oglasi člana\" color={\"dark\"} data={userAds}></CardTable>} */}\n            {state.allAdsByArticle && <CardTable title={state.title} color={\"dark\"} data={state.allAdsByArticle}></CardTable>}\n          </div>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({})\nexport default connect(mapStateToProps, { getAdsByArticleId })(ArticleAds)","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/insert/NewAd.syled.css.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Dashboard/CardLineChart.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/actions/articleAction.js",["225","226"],"import axios from \"axios\";\nimport { baseUrl } from \"./userAction\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCESS';\nexport const GET_ADS_SUCCESS = 'GET_ADS_SUCCESS';\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nexport const GET_AD_BY_ID_SUCCESS = 'GET_AD_BY_ID_SUCCESS';\n\n\n\n\nconst newItem = {\n  article: \"article\",\n  owner: \"bojan\",\n  entryDate: new Date(),\n  origin: \"EU\",\n  wantedPrice: \"100\",\n  finishDate: new Date(),\n  comment: \"comment\",\n}\n\nexport const storeArticle = (article) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newArticle`, article)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Artikal unesen\");\n          console.log(\"success\")\n\n        } else {\n          NotificationManager.error(\"Greška u spremanju artikla!\");\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getArticle = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/articles`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Artikli učitani\");\n          dispatch({\n            type: GET_ARTICLES_SUCCESS,\n            payload: res.data\n          });\n\n        } else {\n          NotificationManager.error(\"Greška u dohvaćanju artikla!\");\n        }\n      })\n  } catch (e) {\n\n  }\n};\n\nexport const storeNewItem = (item, cb) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newad`, item)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Spremljeno\", \"Novi oglas\");\n          cb && cb();\n          // dispatch({\n          //   type: USER_LOGIN_SUCCESS,\n          //   payload: res.data\n          // });\n          // localStorage.setItem('token', res.data.token);\n\n        }\n        if (res.data.success === false) {\n          NotificationManager.error(\"Sva polja moraju biti popunjena osim napomene\", \"Novi oglas\");\n\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const editExistingAd = (item, callback) => async dispatch => {\n  try {\n    if (item.status) {\n      item.adStatus = item.status;\n    }\n    axios.post(`${baseUrl}/updateAds`, item)\n      .then(res => {\n        callback && callback();\n        if (res.data.success === true) {\n          NotificationManager.success(\"Oglas spremljen\", \"Editiranje\");\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getAdById = (id, callback) => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/ads/${id}`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Oglas učitan\");\n          callback(res.data.result)\n          dispatch({\n            type: GET_AD_BY_ID_SUCCESS,\n            payload: res.data.result\n          });\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getAdds = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/ads`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Oglasi učitani\");\n          dispatch({\n            type: GET_ADS_SUCCESS,\n            payload: res.data.ads\n          });\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getCategories = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/categories`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Kategorije učitane\");\n          dispatch({\n            type: GET_CATEGORIES_SUCCESS,\n            payload: res.data.categories\n          });\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const storeCategory = (item) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newcategory`, item)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Kategorija spremljena\");\n          // dispatch({\n          //   type: USER_LOGIN_SUCCESS,\n          //   payload: res.data\n          // });\n          // localStorage.setItem('token', res.data.token);\n\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getAdsByArticleId = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/getarticleads/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Oglasi učitani!\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const updateArticle = (id, params, callback) => async dispatch => {\n  axios.post(`${baseUrl}/updatearticle/${id}`, params)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal uređen\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const deleteArticle = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/deletearticle/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal obrisan\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const getArticleById = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/articles/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal učitan\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/index.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/userReducer.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/articleReducer.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/article/ArticleDropdown.js",["227","228","229"],"import React, { useEffect, useState } from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { getArticle } from \"../store/actions/articleAction\"\n\nimport axios from \"axios\"\nimport { useNavigate } from 'react-router';\nimport { dropDownClassName } from '../pages/insert/NewAd.syled.css';\nfunction ArticleDropdown(props) {\n\n  const articles = useSelector(state => {\n    return state.articlesState.articles\n  });\n\n  const [selecteditem, setSelectedItem] = useState(null);\n  const [items, setItems] = useState(null);\n\n  useEffect(() => {\n    if (!articles || articles.length === 0) {\n      props.getArticle();\n    } else {\n      setItems(articles);\n      props.onSelect && props.onSelect(articles[0]._id)\n    }\n  }, [articles]);\n\n  const onSetSelectedItems = (e, i) => {\n    setSelectedItem(e.target.value);\n    props.onSelect && props.onSelect(e.target.value)\n  }\n\n  return (\n    <div >\n      {items && items.length !== 0 ?\n        <div className=\"mb-3 xl:w-96\">\n          <select className={dropDownClassName} aria-label=\"Default select example\"\n            onChange={onSetSelectedItems}\n            value={selecteditem ? selecteditem : items[0]._id}\n          >\n            {items && items.map(item => {\n              return <option value={item._id} key={item._id}>{item.name}</option>\n            })}}\n          </select>\n        </div>\n        : <div>Nema spremljenih artikala</div>}\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({ article: state.articlesState })\nexport default connect(mapStateToProps, { getArticle })(ArticleDropdown)\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/dropdown/Dropdown.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/actions/userAction.js",["230","231","232"],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/TotalArticlesTable.js",["233"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from 'react-router';\n\n// components\n\nconst dataStatus = (data) => {\n  switch (data.status) {\n    case 1:\n      return <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\n        <i className=\"fas fa-circle text-green-500 mr-2\"></i>\n        Aktivno\n      </td>\n    case 2:\n      return <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\n        <i className=\"fas fa-circle text-red-500 mr-2\"></i>\n        Neaktivno\n      </td>\n    case 3:\n      return <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\n        <i className=\"fas fa-circle text-orange-500 mr-2\"></i> Izvršeno\n      </td>\n    default:\n      break;\n  }\n}\n\nconst tableRow = (color, data, history) => {\n\n  return (\n    <tr key={data._id}\n      onClick={() => { history(`/articleads/${data._id}`) }}\n    >\n      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4 text-left flex items-center\">\n        <img\n          // src={require(\"./logo192.png\")}\n          className=\"h-12 w-12 bg-white rounded-full border\"\n          alt=\"...\"\n        ></img>\n        <span\n          className={\n            \"ml-3 font-bold \" +\n            +(color === \"light\" ? \"text-gray-700\" : \"text-white\")\n          }\n        >\n          {data.name}\n        </span>\n      </td>\n      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\n        {data.amount}\n      </td>\n      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\n        {data.wantedPrice} kn\n      </td>\n      <td className=\"border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-no-wrap p-4\">\n        {data.total}\n      </td>\n    </tr>)\n}\n\nexport default function TotalArticlesTable({ color, data, title }) {\n  const history = useNavigate();\n  return (\n    <>\n      <div\n        className={\n          \"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded \" +\n          (color === \"light\" ? \"bg-white\" : \"bg-blue-900 text-white\")\n        }\n      >\n        <div className=\"rounded-t mb-0 px-4 py-3 border-0\">\n          <div className=\"flex flex-wrap items-center\">\n            <div className=\"relative w-full px-4 max-w-full flex-grow flex-1\">\n              <h3\n                className={\n                  \"font-semibold text-lg \" +\n                  (color === \"light\" ? \"text-gray-800\" : \"text-white\")\n                }\n              >\n                {title}\n              </h3>\n            </div>\n          </div>\n        </div>\n        <div className=\"block w-full overflow-x-auto\">\n          {/* Projects table */}\n          <table className=\"items-center w-full bg-transparent border-collapse\">\n            <thead>\n              <tr>\n                <th\n                  className={\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left \" +\n                    (color === \"light\"\n                      ? \"bg-gray-100 text-gray-600 border-gray-200\"\n                      : \"bg-blue-800 text-blue-300 border-blue-700\")\n                  }\n                >\n                  Artikal\n                </th>\n                <th\n                  className={\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left \" +\n                    (color === \"light\"\n                      ? \"bg-gray-100 text-gray-600 border-gray-200\"\n                      : \"bg-blue-800 text-blue-300 border-blue-700\")\n                  }\n                >\n                  Ukupna Količina\n                </th>\n                <th\n                  className={\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left \" +\n                    (color === \"light\"\n                      ? \"bg-gray-100 text-gray-600 border-gray-200\"\n                      : \"bg-blue-800 text-blue-300 border-blue-700\")\n                  }\n                >\n                  ukupna Očekivana cijena\n                </th>\n                <th\n                  className={\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left \" +\n                    (color === \"light\"\n                      ? \"bg-gray-100 text-gray-600 border-gray-200\"\n                      : \"bg-blue-800 text-blue-300 border-blue-700\")\n                  }\n                >\n                  Ukupno oglasa\n                </th>\n                <th\n                  className={\n                    \"px-6 align-middle border border-solid py-3 text-xs uppercase border-l-0 border-r-0 whitespace-no-wrap font-semibold text-left \" +\n                    (color === \"light\"\n                      ? \"bg-gray-100 text-gray-600 border-gray-200\"\n                      : \"bg-blue-800 text-blue-300 border-blue-700\")\n                  }\n                ></th>\n              </tr>\n            </thead>\n            <tbody>\n              {data && data.map(item => tableRow(color, item, history))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n\nTotalArticlesTable.defaultProps = {\n  color: \"light\",\n};\n\nTotalArticlesTable.propTypes = {\n  color: PropTypes.oneOf([\"light\", \"dark\"]),\n};\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/UserTable.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/imageupload/ImageUpload.js",["234"],"import React, { useState } from 'react'\nimport { dropDownClassName } from '../pages/insert/NewAd.syled.css';\nimport ImageUploader from \"react-images-upload\";\n\nfunction ImageUpload(props) {\n\n\n  const [pictures, setPictures] = useState(null);\n\n  const onDrop = picture => {\n    setPictures({\n      pictures: picture\n    });\n  };\n\n  console.log(pictures);\n  return (\n    <div >\n      <ImageUploader\n        withIcon={true}\n        buttonText=\"Choose images\"\n        onChange={onDrop}\n        imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n        maxFileSize={5242880}\n      />\n    </div>\n  );\n}\nexport default ImageUpload\n","/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/CardTable.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/Tables/ArticleTable.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/index.js",[],"/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/pages/Ads/Ponuda.js",["235","236","237","238","239","240"],"import React, { useEffect, useState } from 'react'\nimport Sidebar from \"../../Sidebar/Sidebar\";\nimport { connect, useSelector } from 'react-redux';\nimport { getAdds, getArticle, getCategories } from \"../../store/actions/articleAction\"\nimport { getArticleName, getCategoryName } from '../../store/reducers/articleReducer';\nimport TotalArticlesTable from '../../Tables/TotalArticlesTable';\nimport Dropdown from '../../dropdown/Dropdown';\n// components\n\n\nfunction Ponuda(props) {\n\n  const ads = useSelector(state => {\n    return state.articlesState.ads\n  });\n  const articles = useSelector(state => {\n    return state.articlesState.articles\n  });\n  const categories = useSelector(state => {\n    return state.articlesState.categories\n  });\n\n  const [items, setItems] = useState({\n    ///arrays\n    all: null,\n    buy: null,\n    sell: null,\n    activeItems: null,\n    inActiveItems: null,\n    ended: null,\n    ///selecitons\n    articleItems: null,\n    selectedArticle: null,\n\n    selectedCategory: null,\n    groupedItems: {},\n    allItems: [],\n  });\n\n  const onAdsAndArticlesLoaded = () => {\n    if (ads && articles) {\n\n      const buyItems = ads.filter(item => item.buysell === 1);\n      const sellItems = ads.filter(item => item.buysell === 2);\n      const activeItems = ads.filter(item => item.status === 1);\n      const inActiveItems = ads.filter(item => item.status === 2);\n      const ended = ads.filter(item => item.status === 3);\n\n      const filteredItems = getFilteredItems(items.selectedCategory, buyItems);\n\n      const allItems = []\n      categories.map((item, index) => {\n        allItems.push({\n          name: item.name,\n          items: getFilteredItems(item._id, buyItems),\n          id: index\n        });\n      })\n\n      setItems({\n        ...items,\n        all: ads,\n        buy: buyItems,\n        sell: sellItems,\n        activeItems,\n        inActiveItems,\n        ended,\n\n        filteredByCategory: filteredItems,\n        allItems\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (!ads) {\n\n    } else {\n      onAdsAndArticlesLoaded()\n    }\n  }, [ads, articles]);\n\n  useEffect(() => {\n    if (!categories) {\n      props.getCategories();\n    } else {\n      if (categories.length > 1) {\n        // console.log(categories)\n        onSelectCategory(categories[0]._id)\n      }\n      props.getAdds();\n      props.getArticle();\n    }\n  }, [categories]);\n\n\n  const getFilteredItems = (categoryId, buy) => {\n    buy = buy || items.buy;\n    if (buy) {\n      const data = buy.filter(item => item.category === categoryId)\n\n      const filteredData = {};\n      data.map(item => {\n        if (!filteredData[item.article]) {\n          filteredData[item.article] = {};\n          filteredData[item.article].wantedPrice = 0;\n          filteredData[item.article].amount = 0;\n          filteredData[item.article].total = 0;\n          filteredData[item.article]._id = item.article;\n          filteredData[item.article].name = getArticleName(item.article)\n        }\n        filteredData[item.article].wantedPrice += item.wantedPrice;\n        filteredData[item.article].amount += item.amount;\n        filteredData[item.article].total++;\n\n      });\n      const d = []\n      Object.keys(filteredData).forEach(key => {\n        d.push(filteredData[key])\n      });\n      return d;\n    }\n    return [];\n  }\n\n  const onSelectCategory = (e) => {\n    const value = e.target ? e.target.value : e;\n    const filteredData = getFilteredItems(value);\n    setItems({ ...items, selectedCategory: value, filteredByCategory: filteredData });\n  }\n\n  return (\n    <>\n      <Sidebar></Sidebar>\n      <div className=\"flex flex-wrap mt-4\">\n        <div className=\"w-full mb-12 px-4\">\n          <div className=\"profile-wrapper\">\n            {/* <section className=\"pb-20 relative block\">\n              <div className=\"container mx-auto px-4 lg:pt-24 lg:pb-64\">\n                <div className=\"flex flex-wrap text-center justify-center\">\n                  <div className=\"w-full lg:w-6/12 px-4\">\n                    <h2 className=\"text-4xl font-semibold text-white\">\n                      <br />\n                    </h2>\n                    <p className=\"text-lg leading-relaxed mt-4 mb-4 text-gray-500\">\n                    </p>\n                  </div>\n                </div>\n\n              </div>\n            </section> */}\n            {/* <ArticleDropdown onSelect={onSelectArticle}></ArticleDropdown> */}\n            {/* {<CardTable title=\"POTRAŽNJA\" color={\"dark\"} data={items.buy}></CardTable>} */}\n            {/* {items.filteredByCategory && <TotalArticlesTable data={items.filteredByCategory} title={`Ponuda-${getCategoryName(items.selectedCategory)}`}></TotalArticlesTable>} */}\n            {items.allItems && items.allItems.map(item => {\n              return < TotalArticlesTable key={item.id} data={item.items} title={`Ponuda-${item.name}`}></TotalArticlesTable>\n            })}\n          </div>\n        </div>\n      </div >\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({ users: state.articlesState })\nexport default connect(mapStateToProps, { getAdds, getArticle, getCategories })(Ponuda)",{"ruleId":"241","severity":1,"message":"242","line":2,"column":8,"nodeType":"243","messageId":"244","endLine":2,"endColumn":12},{"ruleId":"241","severity":1,"message":"245","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":13},{"ruleId":"241","severity":1,"message":"246","line":9,"column":17,"nodeType":"243","messageId":"244","endLine":9,"endColumn":24},{"ruleId":"241","severity":1,"message":"247","line":10,"column":8,"nodeType":"243","messageId":"244","endLine":10,"endColumn":15},{"ruleId":"241","severity":1,"message":"248","line":11,"column":8,"nodeType":"243","messageId":"244","endLine":11,"endColumn":15},{"ruleId":"241","severity":1,"message":"249","line":12,"column":8,"nodeType":"243","messageId":"244","endLine":12,"endColumn":17},{"ruleId":"241","severity":1,"message":"250","line":13,"column":8,"nodeType":"243","messageId":"244","endLine":13,"endColumn":13},{"ruleId":"241","severity":1,"message":"251","line":14,"column":8,"nodeType":"243","messageId":"244","endLine":14,"endColumn":13},{"ruleId":"241","severity":1,"message":"252","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":43,"column":6,"nodeType":"255","endLine":43,"endColumn":18,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":85,"column":15,"nodeType":"259","endLine":85,"endColumn":102},{"ruleId":"257","severity":1,"message":"258","line":117,"column":15,"nodeType":"259","endLine":117,"endColumn":102},{"ruleId":"241","severity":1,"message":"260","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":18},{"ruleId":"241","severity":1,"message":"260","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":18},{"ruleId":"253","severity":1,"message":"261","line":45,"column":6,"nodeType":"255","endLine":45,"endColumn":18,"suggestions":"262"},{"ruleId":"241","severity":1,"message":"263","line":8,"column":8,"nodeType":"243","messageId":"244","endLine":8,"endColumn":20},{"ruleId":"241","severity":1,"message":"264","line":10,"column":10,"nodeType":"243","messageId":"244","endLine":10,"endColumn":21},{"ruleId":"253","severity":1,"message":"265","line":64,"column":6,"nodeType":"255","endLine":64,"endColumn":11,"suggestions":"266"},{"ruleId":"253","severity":1,"message":"265","line":72,"column":6,"nodeType":"255","endLine":72,"endColumn":16,"suggestions":"267"},{"ruleId":"241","severity":1,"message":"268","line":7,"column":47,"nodeType":"243","messageId":"244","endLine":7,"endColumn":64},{"ruleId":"241","severity":1,"message":"269","line":9,"column":8,"nodeType":"243","messageId":"244","endLine":9,"endColumn":23},{"ruleId":"253","severity":1,"message":"270","line":66,"column":6,"nodeType":"255","endLine":66,"endColumn":12,"suggestions":"271"},{"ruleId":"253","severity":1,"message":"272","line":74,"column":6,"nodeType":"255","endLine":74,"endColumn":16,"suggestions":"273"},{"ruleId":"253","severity":1,"message":"274","line":82,"column":6,"nodeType":"255","endLine":82,"endColumn":18,"suggestions":"275"},{"ruleId":"241","severity":1,"message":"260","line":3,"column":8,"nodeType":"243","messageId":"244","endLine":3,"endColumn":18},{"ruleId":"253","severity":1,"message":"276","line":48,"column":6,"nodeType":"255","endLine":48,"endColumn":8,"suggestions":"277"},{"ruleId":"253","severity":1,"message":"261","line":57,"column":6,"nodeType":"255","endLine":57,"endColumn":18,"suggestions":"278"},{"ruleId":"241","severity":1,"message":"268","line":7,"column":47,"nodeType":"243","messageId":"244","endLine":7,"endColumn":64},{"ruleId":"241","severity":1,"message":"269","line":10,"column":8,"nodeType":"243","messageId":"244","endLine":10,"endColumn":23},{"ruleId":"241","severity":1,"message":"279","line":41,"column":9,"nodeType":"243","messageId":"244","endLine":41,"endColumn":17},{"ruleId":"241","severity":1,"message":"280","line":55,"column":10,"nodeType":"243","messageId":"244","endLine":55,"endColumn":23},{"ruleId":"241","severity":1,"message":"281","line":55,"column":25,"nodeType":"243","messageId":"244","endLine":55,"endColumn":40},{"ruleId":"253","severity":1,"message":"282","line":84,"column":6,"nodeType":"255","endLine":84,"endColumn":12,"suggestions":"283"},{"ruleId":"253","severity":1,"message":"272","line":92,"column":6,"nodeType":"255","endLine":92,"endColumn":16,"suggestions":"284"},{"ruleId":"253","severity":1,"message":"274","line":100,"column":6,"nodeType":"255","endLine":100,"endColumn":18,"suggestions":"285"},{"ruleId":"253","severity":1,"message":"261","line":108,"column":6,"nodeType":"255","endLine":108,"endColumn":13,"suggestions":"286"},{"ruleId":"253","severity":1,"message":"287","line":130,"column":6,"nodeType":"255","endLine":130,"endColumn":8,"suggestions":"288"},{"ruleId":"241","severity":1,"message":"289","line":5,"column":26,"nodeType":"243","messageId":"244","endLine":5,"endColumn":41},{"ruleId":"241","severity":1,"message":"290","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":16},{"ruleId":"291","severity":1,"message":"292","line":51,"column":36,"nodeType":"293","messageId":"294","endLine":51,"endColumn":38},{"ruleId":"253","severity":1,"message":"295","line":80,"column":6,"nodeType":"255","endLine":80,"endColumn":21,"suggestions":"296"},{"ruleId":"253","severity":1,"message":"297","line":92,"column":6,"nodeType":"255","endLine":92,"endColumn":18,"suggestions":"298"},{"ruleId":"291","severity":1,"message":"292","line":101,"column":21,"nodeType":"293","messageId":"294","endLine":101,"endColumn":23},{"ruleId":"253","severity":1,"message":"299","line":27,"column":6,"nodeType":"255","endLine":27,"endColumn":13,"suggestions":"300"},{"ruleId":"253","severity":1,"message":"299","line":36,"column":6,"nodeType":"255","endLine":36,"endColumn":11,"suggestions":"301"},{"ruleId":"291","severity":1,"message":"292","line":42,"column":22,"nodeType":"293","messageId":"294","endLine":42,"endColumn":24},{"ruleId":"291","severity":1,"message":"292","line":43,"column":20,"nodeType":"293","messageId":"294","endLine":43,"endColumn":22},{"ruleId":"241","severity":1,"message":"302","line":1,"column":28,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36},{"ruleId":"241","severity":1,"message":"303","line":5,"column":10,"nodeType":"243","messageId":"244","endLine":5,"endColumn":17},{"ruleId":"241","severity":1,"message":"304","line":9,"column":7,"nodeType":"243","messageId":"244","endLine":9,"endColumn":23},{"ruleId":"253","severity":1,"message":"261","line":36,"column":6,"nodeType":"255","endLine":36,"endColumn":16,"suggestions":"305"},{"ruleId":"253","severity":1,"message":"261","line":44,"column":6,"nodeType":"255","endLine":44,"endColumn":18,"suggestions":"306"},{"ruleId":"241","severity":1,"message":"307","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":17},{"ruleId":"241","severity":1,"message":"264","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":21},{"ruleId":"241","severity":1,"message":"308","line":15,"column":9,"nodeType":"243","messageId":"244","endLine":15,"endColumn":12},{"ruleId":"253","severity":1,"message":"309","line":26,"column":6,"nodeType":"255","endLine":26,"endColumn":8,"suggestions":"310"},{"ruleId":"241","severity":1,"message":"311","line":3,"column":19,"nodeType":"243","messageId":"244","endLine":3,"endColumn":30},{"ruleId":"241","severity":1,"message":"307","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":17},{"ruleId":"241","severity":1,"message":"264","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":21},{"ruleId":"253","severity":1,"message":"312","line":27,"column":6,"nodeType":"255","endLine":27,"endColumn":8,"suggestions":"313"},{"ruleId":"241","severity":1,"message":"314","line":3,"column":10,"nodeType":"243","messageId":"244","endLine":3,"endColumn":31},{"ruleId":"241","severity":1,"message":"315","line":13,"column":7,"nodeType":"243","messageId":"244","endLine":13,"endColumn":14},{"ruleId":"241","severity":1,"message":"252","line":5,"column":8,"nodeType":"243","messageId":"244","endLine":5,"endColumn":13},{"ruleId":"241","severity":1,"message":"264","line":6,"column":10,"nodeType":"243","messageId":"244","endLine":6,"endColumn":21},{"ruleId":"253","severity":1,"message":"261","line":24,"column":6,"nodeType":"255","endLine":24,"endColumn":16,"suggestions":"316"},{"ruleId":"241","severity":1,"message":"314","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":31},{"ruleId":"241","severity":1,"message":"317","line":4,"column":7,"nodeType":"243","messageId":"244","endLine":4,"endColumn":12},{"ruleId":"241","severity":1,"message":"318","line":15,"column":7,"nodeType":"243","messageId":"244","endLine":15,"endColumn":23},{"ruleId":"241","severity":1,"message":"319","line":7,"column":7,"nodeType":"243","messageId":"244","endLine":7,"endColumn":17},{"ruleId":"241","severity":1,"message":"268","line":2,"column":10,"nodeType":"243","messageId":"244","endLine":2,"endColumn":27},{"ruleId":"241","severity":1,"message":"289","line":5,"column":26,"nodeType":"243","messageId":"244","endLine":5,"endColumn":41},{"ruleId":"241","severity":1,"message":"290","line":7,"column":8,"nodeType":"243","messageId":"244","endLine":7,"endColumn":16},{"ruleId":"291","severity":1,"message":"292","line":52,"column":36,"nodeType":"293","messageId":"294","endLine":52,"endColumn":38},{"ruleId":"253","severity":1,"message":"295","line":81,"column":6,"nodeType":"255","endLine":81,"endColumn":21,"suggestions":"320"},{"ruleId":"253","severity":1,"message":"297","line":94,"column":6,"nodeType":"255","endLine":94,"endColumn":18,"suggestions":"321"},{"ruleId":"291","severity":1,"message":"292","line":103,"column":21,"nodeType":"293","messageId":"294","endLine":103,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'history' is defined but never used.","'Sidebar' is defined but never used.","'Profile' is defined but never used.","'Dashboard' is defined but never used.","'Newad' is defined but never used.","'Login' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["322"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DatePicker' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["323"],"'ArticleTable' is defined but never used.","'useNavigate' is defined but never used.","React Hook useEffect has missing dependencies: 'onAdsAndArticlesLoaded' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["324"],["325"],"'dropDownClassName' is defined but never used.","'ArticleDropdown' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'submitData'. Either include them or remove the dependency array. You can also do a functional update 'setsubmitData(s => ...)' if you only need 'submitData' in the 'setsubmitData' call.",["326"],"React Hook useEffect has missing dependencies: 'categories', 'filterDropDown', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["327"],"React Hook useEffect has missing dependencies: 'articles', 'filterDropDown', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["328"],"React Hook useEffect has missing dependencies: 'articleName', 'params.id', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["329"],["330"],"'editedAd' is assigned a value but never used.","'selectedOwner' is assigned a value but never used.","'setSelctedOwner' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'submitData'. Either include it or remove the dependency array. You can also do a functional update 'setsubmitData(s => ...)' if you only need 'submitData' in the 'setsubmitData' call.",["331"],["332"],["333"],["334"],"React Hook useEffect has missing dependencies: 'articles', 'categories', 'filterDropDown', 'params.id', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["335"],"'getCategoryName' is defined but never used.","'Dropdown' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'onAdsAndArticlesLoaded'. Either include it or remove the dependency array.",["336"],"React Hook useEffect has missing dependencies: 'onSelectCategory' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["337"],"React Hook useEffect has missing dependencies: 'props' and 'setItems'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["338"],["339"],"'useState' is defined but never used.","'getAdds' is defined but never used.","'getCategorieName' is assigned a value but never used.",["340"],["341"],"'UserTable' is defined but never used.","'ads' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["342"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'params.articleId', 'props', and 'state'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["343"],"'NotificationContainer' is defined but never used.","'newItem' is assigned a value but never used.",["344"],"'wpUrl' is assigned a value but never used.","'registerUserData' is assigned a value but never used.","'dataStatus' is assigned a value but never used.",["345"],["346"],{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"357","fix":"359"},{"desc":"360","fix":"361"},{"desc":"349","fix":"362"},{"desc":"363","fix":"364"},{"desc":"357","fix":"365"},{"desc":"357","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"349","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"379","fix":"386"},{"desc":"371","fix":"387"},{"desc":"373","fix":"388"},"Update the dependencies array to be: [history, props, user.token]",{"range":"389","text":"390"},"Update the dependencies array to be: [categories, props]",{"range":"391","text":"392"},"Update the dependencies array to be: [ads, onAdsAndArticlesLoaded, props]",{"range":"393","text":"394"},"Update the dependencies array to be: [articles, onAdsAndArticlesLoaded, props]",{"range":"395","text":"396"},"Update the dependencies array to be: [history, submitData, user]",{"range":"397","text":"398"},"Update the dependencies array to be: [articles, categories, filterDropDown, props]",{"range":"399","text":"400"},{"range":"401","text":"400"},"Update the dependencies array to be: [articleName, params.id, props]",{"range":"402","text":"403"},{"range":"404","text":"392"},"Update the dependencies array to be: [submitData, user]",{"range":"405","text":"406"},{"range":"407","text":"400"},{"range":"408","text":"400"},"Update the dependencies array to be: [props, users]",{"range":"409","text":"410"},"Update the dependencies array to be: [articles, categories, filterDropDown, params.id, props]",{"range":"411","text":"412"},"Update the dependencies array to be: [ads, articles, onAdsAndArticlesLoaded]",{"range":"413","text":"414"},"Update the dependencies array to be: [categories, onSelectCategory, props]",{"range":"415","text":"416"},"Update the dependencies array to be: [props, setItems, users]",{"range":"417","text":"418"},"Update the dependencies array to be: [ads, props, setItems]",{"range":"419","text":"420"},"Update the dependencies array to be: [articles, props]",{"range":"421","text":"422"},{"range":"423","text":"392"},"Update the dependencies array to be: [params.id, props]",{"range":"424","text":"425"},"Update the dependencies array to be: [params.articleId, props, state]",{"range":"426","text":"427"},{"range":"428","text":"422"},{"range":"429","text":"414"},{"range":"430","text":"416"},[896,908],"[history, props, user.token]",[1432,1444],"[categories, props]",[1670,1675],"[ads, onAdsAndArticlesLoaded, props]",[1801,1811],"[articles, onAdsAndArticlesLoaded, props]",[1693,1699],"[history, submitData, user]",[1840,1850],"[articles, categories, filterDropDown, props]",[1996,2008],[1781,1783],"[articleName, params.id, props]",[1962,1974],[2404,2410],"[submitData, user]",[2551,2561],[2707,2719],[2838,2845],"[props, users]",[3467,3469],"[articles, categories, filterDropDown, params.id, props]",[2046,2061],"[ads, articles, onAdsAndArticlesLoaded]",[2297,2309],"[categories, onSelectCategory, props]",[673,680],"[props, setItems, users]",[785,790],"[ads, props, setItems]",[885,895],"[articles, props]",[996,1008],[725,727],"[params.id, props]",[871,873],"[params.articleId, props, state]",[727,737],[2063,2078],[2349,2361]]