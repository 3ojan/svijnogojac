{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"./userAction\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCESS';\nexport const GET_ADS_SUCCESS = 'GET_ADS_SUCCESS';\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nexport const GET_AD_BY_ID_SUCCESS = 'GET_AD_BY_ID_SUCCESS';\nconst newItem = {\n  article: \"article\",\n  owner: \"bojan\",\n  entryDate: new Date(),\n  origin: \"EU\",\n  wantedPrice: \"100\",\n  finishDate: new Date(),\n  comment: \"comment\"\n};\nexport const storeArticle = article => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newArticle`, article).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal unesen\");\n        console.log(\"success\");\n      } else {\n        NotificationManager.error(\"Greška u spremanju artikla!\");\n      }\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getArticle = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/articles`).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikli učitani\");\n        dispatch({\n          type: GET_ARTICLES_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        NotificationManager.error(\"Greška u dohvaćanju artikla!\");\n      }\n    });\n  } catch (e) {}\n};\nexport const storeNewItem = (item, cb) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newad`, item).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Spremljeno\", \"Novi oglas\");\n        cb && cb(); // dispatch({\n        //   type: USER_LOGIN_SUCCESS,\n        //   payload: res.data\n        // });\n        // localStorage.setItem('token', res.data.token);\n      }\n\n      if (res.data.success === false) {\n        NotificationManager.error(\"Sva polja moraju biti popunjena osim napomene\", \"Novi oglas\");\n      } else {}\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const editExistingAd = (item, callback) => async dispatch => {\n  try {\n    if (item.status) {\n      item.adStatus = item.status;\n    }\n\n    axios.post(`${baseUrl}/updateAds`, item).then(res => {\n      callback && callback();\n\n      if (res.data.success === true) {\n        NotificationManager.success(\"Oglas spremljen\", \"Editiranje\");\n      } else {}\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getAdById = (id, callback) => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/ads/${id}`).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Oglas učitan\");\n        callback(res.data.result);\n        dispatch({\n          type: GET_AD_BY_ID_SUCCESS,\n          payload: res.data.result\n        });\n      } else {}\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getAdds = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/ads`).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Oglasi učitani\");\n        dispatch({\n          type: GET_ADS_SUCCESS,\n          payload: res.data.ads\n        });\n      } else {}\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getCategories = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/categories`).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Kategorije učitane\");\n        dispatch({\n          type: GET_CATEGORIES_SUCCESS,\n          payload: res.data.categories\n        });\n      } else {}\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const storeCategory = item => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newcategory`, item).then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Kategorija spremljena\"); // dispatch({\n        //   type: USER_LOGIN_SUCCESS,\n        //   payload: res.data\n        // });\n        // localStorage.setItem('token', res.data.token);\n      } else {}\n    });\n  } catch (e) {// dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getAdsByArticleId = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/getarticleads/${id}`).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Oglasi učitani!\");\n      callback(res.data.ads);\n    } else {\n      console.log(res);\n    }\n  }, error => {// console.error('onRejected function called: ' + error.message);\n  });\n};\nexport const updateArticle = (id, params, callback) => async dispatch => {\n  axios.post(`${baseUrl}/updatearticle/${id}`, params).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Artikal uređen\");\n      callback(res.data.ads);\n    } else {\n      console.log(res);\n    }\n  }, error => {// console.error('onRejected function called: ' + error.message);\n  });\n};\nexport const deleteArticle = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/deletearticle/${id}`).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Artikal obrisan\");\n      callback(res.data.ads);\n    } else {\n      console.log(res);\n    }\n  }, error => {// console.error('onRejected function called: ' + error.message);\n  });\n};\nexport const getArticleById = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/articles/${id}`).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Artikal učitan\");\n      callback(res.data.ads);\n    } else {\n      console.log(res);\n    }\n  }, error => {// console.error('onRejected function called: ' + error.message);\n  });\n};","map":{"version":3,"sources":["/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/actions/articleAction.js"],"names":["axios","baseUrl","NotificationContainer","NotificationManager","GET_ARTICLES_SUCCESS","GET_ADS_SUCCESS","GET_CATEGORIES_SUCCESS","GET_AD_BY_ID_SUCCESS","newItem","article","owner","entryDate","Date","origin","wantedPrice","finishDate","comment","storeArticle","dispatch","post","then","res","data","success","console","log","error","e","getArticle","get","type","payload","storeNewItem","item","cb","editExistingAd","callback","status","adStatus","getAdById","id","result","getAdds","ads","getCategories","categories","storeCategory","getAdsByArticleId","updateArticle","params","deleteArticle","getArticleById"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { baseUrl } from \"./userAction\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nexport const GET_ARTICLES_SUCCESS = 'GET_ARTICLES_SUCCESS';\nexport const GET_ADS_SUCCESS = 'GET_ADS_SUCCESS';\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nexport const GET_AD_BY_ID_SUCCESS = 'GET_AD_BY_ID_SUCCESS';\n\n\n\n\nconst newItem = {\n  article: \"article\",\n  owner: \"bojan\",\n  entryDate: new Date(),\n  origin: \"EU\",\n  wantedPrice: \"100\",\n  finishDate: new Date(),\n  comment: \"comment\",\n}\n\nexport const storeArticle = (article) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newArticle`, article)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Artikal unesen\");\n          console.log(\"success\")\n\n        } else {\n          NotificationManager.error(\"Greška u spremanju artikla!\");\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\nexport const getArticle = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/articles`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Artikli učitani\");\n          dispatch({\n            type: GET_ARTICLES_SUCCESS,\n            payload: res.data\n          });\n\n        } else {\n          NotificationManager.error(\"Greška u dohvaćanju artikla!\");\n        }\n      })\n  } catch (e) {\n\n  }\n};\n\nexport const storeNewItem = (item, cb) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newad`, item)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Spremljeno\", \"Novi oglas\");\n          cb && cb();\n          // dispatch({\n          //   type: USER_LOGIN_SUCCESS,\n          //   payload: res.data\n          // });\n          // localStorage.setItem('token', res.data.token);\n\n        }\n        if (res.data.success === false) {\n          NotificationManager.error(\"Sva polja moraju biti popunjena osim napomene\", \"Novi oglas\");\n\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const editExistingAd = (item, callback) => async dispatch => {\n  try {\n    if (item.status) {\n      item.adStatus = item.status;\n    }\n    axios.post(`${baseUrl}/updateAds`, item)\n      .then(res => {\n        callback && callback();\n        if (res.data.success === true) {\n          NotificationManager.success(\"Oglas spremljen\", \"Editiranje\");\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getAdById = (id, callback) => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/ads/${id}`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Oglas učitan\");\n          callback(res.data.result)\n          dispatch({\n            type: GET_AD_BY_ID_SUCCESS,\n            payload: res.data.result\n          });\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getAdds = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/ads`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Oglasi učitani\");\n          dispatch({\n            type: GET_ADS_SUCCESS,\n            payload: res.data.ads\n          });\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getCategories = () => async dispatch => {\n  try {\n    axios.get(`${baseUrl}/categories`)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Kategorije učitane\");\n          dispatch({\n            type: GET_CATEGORIES_SUCCESS,\n            payload: res.data.categories\n          });\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const storeCategory = (item) => async dispatch => {\n  try {\n    axios.post(`${baseUrl}/newcategory`, item)\n      .then(res => {\n        if (res.data.success === true) {\n          NotificationManager.success(\"Kategorija spremljena\");\n          // dispatch({\n          //   type: USER_LOGIN_SUCCESS,\n          //   payload: res.data\n          // });\n          // localStorage.setItem('token', res.data.token);\n\n        } else {\n        }\n      })\n  } catch (e) {\n    // dispatch({\n    //   type: USERS_ERROR,\n    //   payload: console.log(e)\n    // });\n  }\n};\n\nexport const getAdsByArticleId = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/getarticleads/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Oglasi učitani!\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const updateArticle = (id, params, callback) => async dispatch => {\n  axios.post(`${baseUrl}/updatearticle/${id}`, params)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal uređen\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const deleteArticle = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/deletearticle/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal obrisan\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const getArticleById = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/articles/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Artikal učitan\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};"]},"metadata":{},"sourceType":"module"}