{"ast":null,"code":"import axios from \"axios\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst wpUrl = \"http://localhost:8666\";\nexport const GET_USERS = 'GET_USERS';\nexport const AUTH_FAILED = 'AUTH_FAILED';\nexport const SET_USERS = 'SET_USERS';\nexport const USERS_ERROR = 'USERS_ERROR';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\nexport const baseUrl = \"http://localhost:2999\";\nconst registerUserData = {\n  email: \"test@test.hr\",\n  password: \"1234\",\n  firstName: \"test\",\n  lastName: \"user\"\n};\nlet token = localStorage.getItem(\"svinje-token\");\nexport const login = (data, callback) => async dispatch => {\n  if (token) {\n    axios.defaults.headers.common = {\n      'Authorization': `Bearer ${token}`\n    };\n  }\n\n  try {\n    axios.post(`${baseUrl}/login`, data).then(res => {\n      if (res.data.success === true) {\n        if (res.data.token) {\n          NotificationManager.success(\"Korsnik ulogiran\");\n          token = res.data.token;\n          localStorage.setItem(\"svinje-token\", token);\n          axios.defaults.headers.common = {\n            'Authorization': `Bearer ${res.data.token}`\n          };\n        }\n\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: res.data\n        });\n        callback && callback(); // localStorage.setItem('token', res.data.token);\n      }\n\n      if (res.data.success === false) {\n        NotificationManager.error(res.data.message);\n      } else {}\n    });\n  } catch (e) {\n    dispatch({\n      type: USERS_ERROR,\n      payload: console.log(e)\n    });\n  }\n};\nexport const auth = () => async dispatch => {\n  axios.defaults.headers.common = {\n    'Authorization': `Bearer ${token}`\n  };\n  axios.get(`${baseUrl}/auth`).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Autorizacija uspješna!\");\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } else {\n      console.log(res);\n      NotificationManager.error(\"Greška u autoriziranju korisnika!\");\n    }\n  }, error => {\n    dispatch({\n      type: AUTH_FAILED\n    }); // console.error('onRejected function called: ' + error.message);\n  });\n};\nexport const logout = callback => async dispatch => {\n  if (token) {\n    axios.defaults.headers.common = {\n      'Authorization': `Bearer ${token}`\n    };\n  }\n\n  axios.get(`${baseUrl}/logout`).then(res => {\n    if (res.data.success === true) {\n      localStorage.removeItem(\"svinje-token\");\n      token = null;\n      dispatch({\n        type: USER_LOGOUT_SUCCESS,\n        payload: res.data\n      });\n      NotificationManager.success(\"Odjava uspješna!\");\n      callback && callback();\n    } else {\n      console.log(res);\n    }\n  }, error => {\n    dispatch({\n      type: AUTH_FAILED\n    });\n  });\n};\nexport const getUsers = () => async dispatch => {\n  axios.get(`${baseUrl}/users`).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Korisnici učitani!\");\n      dispatch({\n        type: SET_USERS,\n        payload: res.data\n      });\n    } else {\n      console.log(res);\n    }\n  }, error => {\n    dispatch({\n      type: \"USERS_GET_FAILED\"\n    }); // console.error('onRejected function called: ' + error.message);\n  });\n};\nexport const getUserAds = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/getownerads/${id}`).then(res => {\n    if (res.data.success === true) {\n      NotificationManager.success(\"Oglasi učitani!\");\n      callback(res.data.ads);\n    } else {\n      console.log(res);\n    }\n  }, error => {// console.error('onRejected function called: ' + error.message);\n  });\n};","map":{"version":3,"sources":["/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/actions/userAction.js"],"names":["axios","NotificationContainer","NotificationManager","wpUrl","GET_USERS","AUTH_FAILED","SET_USERS","USERS_ERROR","USER_LOGIN_SUCCESS","USER_LOGOUT_SUCCESS","baseUrl","registerUserData","email","password","firstName","lastName","token","localStorage","getItem","login","data","callback","dispatch","defaults","headers","common","post","then","res","success","setItem","type","payload","error","message","e","console","log","auth","get","logout","removeItem","getUsers","getUserAds","id","ads"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nconst wpUrl = \"http://localhost:8666\";\nexport const GET_USERS = 'GET_USERS';\nexport const AUTH_FAILED = 'AUTH_FAILED';\nexport const SET_USERS = 'SET_USERS';\nexport const USERS_ERROR = 'USERS_ERROR';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGOUT_SUCCESS = 'USER_LOGOUT_SUCCESS';\n\nexport const baseUrl = \"http://localhost:2999\";\n\n\nconst registerUserData = {\n  email: \"test@test.hr\",\n  password: \"1234\",\n  firstName: \"test\",\n  lastName: \"user\"\n}\n\n\nlet token = localStorage.getItem(\"svinje-token\");\n\nexport const login = (data, callback) => async dispatch => {\n  if (token) {\n    axios.defaults.headers.common = {\n      'Authorization': `Bearer ${token}`\n    }\n  }\n  try {\n    axios.post(`${baseUrl}/login`, data)\n      .then(res => {\n        if (res.data.success === true) {\n          if (res.data.token) {\n            NotificationManager.success(\"Korsnik ulogiran\");\n            token = res.data.token;\n            localStorage.setItem(\"svinje-token\", token);\n            axios.defaults.headers.common = {\n              'Authorization': `Bearer ${res.data.token}`\n            }\n          }\n          dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: res.data\n          });\n          callback && callback();\n          // localStorage.setItem('token', res.data.token);\n\n        }\n        if (res.data.success === false) {\n          NotificationManager.error(res.data.message);\n        }\n        else {\n        }\n      })\n  } catch (e) {\n    dispatch({\n      type: USERS_ERROR,\n      payload: console.log(e)\n    });\n  }\n};\n\nexport const auth = () => async dispatch => {\n  axios.defaults.headers.common = {\n    'Authorization': `Bearer ${token}`\n  }\n  axios.get(`${baseUrl}/auth`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Autorizacija uspješna!\");\n        dispatch({\n          type: USER_LOGIN_SUCCESS,\n          payload: res.data\n        });\n      } else {\n        console.log(res)\n        NotificationManager.error(\"Greška u autoriziranju korisnika!\");\n      }\n    },\n      error => {\n        dispatch({\n          type: AUTH_FAILED,\n        });\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\n\nexport const logout = (callback) => async dispatch => {\n  if (token) {\n    axios.defaults.headers.common = {\n      'Authorization': `Bearer ${token}`\n    }\n  }\n  axios.get(`${baseUrl}/logout`)\n    .then(res => {\n      if (res.data.success === true) {\n        localStorage.removeItem(\"svinje-token\");\n        token = null;\n        dispatch({\n          type: USER_LOGOUT_SUCCESS,\n          payload: res.data\n        });\n        NotificationManager.success(\"Odjava uspješna!\");\n        callback && callback();\n      } else {\n        console.log(res)\n\n      }\n    },\n      error => {\n        dispatch({\n          type: AUTH_FAILED,\n        });\n      })\n};\n\n\nexport const getUsers = () => async dispatch => {\n  axios.get(`${baseUrl}/users`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Korisnici učitani!\");\n        dispatch({\n          type: SET_USERS,\n          payload: res.data\n        });\n      } else {\n        console.log(res)\n\n      }\n    },\n      error => {\n        dispatch({\n          type: \"USERS_GET_FAILED\",\n        });\n        // console.error('onRejected function called: ' + error.message);\n      })\n};\nexport const getUserAds = (id, callback) => async dispatch => {\n  axios.get(`${baseUrl}/getownerads/${id}`)\n    .then(res => {\n      if (res.data.success === true) {\n        NotificationManager.success(\"Oglasi učitani!\");\n        callback(res.data.ads)\n      } else {\n        console.log(res)\n\n      }\n    },\n      error => {\n        // console.error('onRejected function called: ' + error.message);\n      })\n};"]},"metadata":{},"sourceType":"module"}