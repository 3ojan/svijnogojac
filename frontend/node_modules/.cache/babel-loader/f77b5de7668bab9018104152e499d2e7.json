{"ast":null,"code":"import { USER_LOGIN_SUCCESS, AUTH_FAILED, USER_LOGOUT_SUCCESS, SET_USERS } from '../actions/userAction'; // email: \"test@test.hr\"\n// firstName: \"test\"\n// iat: 1647942565\n// lastName: \"user\"\n// role: 1\n// _id: \"62390c0905eb689c461bfd99\"\n\nconst initialState = {\n  loading: true,\n  userData: null,\n  // token: localStorage.getItem(\"svinje-token\"),\n  token: null,\n  users: null\n};\nlet names = {};\nlet users = [];\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case USER_LOGIN_SUCCESS:\n      return { ...state,\n        userData: action.payload.userData,\n        token: action.payload.token,\n        loading: false\n      };\n\n    case USER_LOGOUT_SUCCESS:\n      return { ...initialState\n      };\n\n    case AUTH_FAILED:\n      return { ...state,\n        userData: null,\n        token: null,\n        loading: false\n      };\n\n    case SET_USERS:\n      users = action.payload.users;\n      return { ...state,\n        users: action.payload.users,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getUserFullName = id => {\n  if (names[id]) {\n    return names[id];\n  }\n\n  const item = users.filter(item => item._id === id);\n\n  if (item[0]) {\n    names[id] = `${item[0].firstName} ${item[0].lastName}`;\n  }\n\n  return names[id];\n};\nexport default userReducer;","map":{"version":3,"sources":["/Users/bojanratkovic/Documents/js/js/Svinje/svinje/frontend/src/components/store/reducers/userReducer.js"],"names":["USER_LOGIN_SUCCESS","AUTH_FAILED","USER_LOGOUT_SUCCESS","SET_USERS","initialState","loading","userData","token","users","names","userReducer","state","action","type","payload","getUserFullName","id","item","filter","_id","firstName","lastName"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,WAA7B,EAA0CC,mBAA1C,EAA+DC,SAA/D,QAAgF,uBAAhF,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,QAAQ,EAAE,IAFS;AAGnB;AACAC,EAAAA,KAAK,EAAE,IAJY;AAKnBC,EAAAA,KAAK,EAAE;AALY,CAArB;AAOA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAID,KAAK,GAAG,EAAZ;;AAEA,MAAME,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,kBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAAP,CAAeR,QAFpB;AAGLC,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP,KAHjB;AAILF,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKH,mBAAL;AACE,aAAO,EACL,GAAGE;AADE,OAAP;;AAGF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILF,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKF,SAAL;AACEK,MAAAA,KAAK,GAAGI,MAAM,CAACE,OAAP,CAAeN,KAAvB;AACA,aAAO,EACL,GAAGG,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN,KAFjB;AAGLH,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AAAS,aAAOM,KAAP;AA1BX;AA4BD,CA7BD;;AA+BA,OAAO,MAAMI,eAAe,GAAIC,EAAD,IAAQ;AACrC,MAAIP,KAAK,CAACO,EAAD,CAAT,EAAe;AACb,WAAOP,KAAK,CAACO,EAAD,CAAZ;AACD;;AACD,QAAMC,IAAI,GAAGT,KAAK,CAACU,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACE,GAAL,KAAaH,EAAlC,CAAb;;AACA,MAAIC,IAAI,CAAC,CAAD,CAAR,EAAa;AACXR,IAAAA,KAAK,CAACO,EAAD,CAAL,GAAa,GAAEC,IAAI,CAAC,CAAD,CAAJ,CAAQG,SAAU,IAAGH,IAAI,CAAC,CAAD,CAAJ,CAAQI,QAAS,EAArD;AACD;;AACD,SAAOZ,KAAK,CAACO,EAAD,CAAZ;AACD,CATM;AAWP,eAAeN,WAAf","sourcesContent":["import { USER_LOGIN_SUCCESS, AUTH_FAILED, USER_LOGOUT_SUCCESS, SET_USERS } from '../actions/userAction'\n\n// email: \"test@test.hr\"\n// firstName: \"test\"\n// iat: 1647942565\n// lastName: \"user\"\n// role: 1\n// _id: \"62390c0905eb689c461bfd99\"\n\nconst initialState = {\n  loading: true,\n  userData: null,\n  // token: localStorage.getItem(\"svinje-token\"),\n  token: null,\n  users: null,\n}\nlet names = {};\nlet users = [];\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGIN_SUCCESS:\n      return {\n        ...state,\n        userData: action.payload.userData,\n        token: action.payload.token,\n        loading: false\n      }\n    case USER_LOGOUT_SUCCESS:\n      return {\n        ...initialState\n      }\n    case AUTH_FAILED:\n      return {\n        ...state,\n        userData: null,\n        token: null,\n        loading: false\n      }\n    case SET_USERS:\n      users = action.payload.users;\n      return {\n        ...state,\n        users: action.payload.users,\n        loading: false\n      }\n    default: return state\n  }\n}\n\nexport const getUserFullName = (id) => {\n  if (names[id]) {\n    return names[id];\n  }\n  const item = users.filter(item => item._id === id);\n  if (item[0]) {\n    names[id] = `${item[0].firstName} ${item[0].lastName}`\n  }\n  return names[id];\n}\n\nexport default userReducer"]},"metadata":{},"sourceType":"module"}